(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{575:function(v,_,t){"use strict";t.r(_);var s=t(10),e=Object(s.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"http-定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-定义"}},[v._v("#")]),v._v(" "),t("code",[v._v("HTTP")]),v._v(" 定义")]),v._v(" "),t("hr"),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("HTTP")]),v._v("("),t("code",[v._v("HyperText Transfer Protocal")]),v._v(")超文本传输协议，它通常运行在 "),t("code",[v._v("TCP")]),v._v(" 之上，通过浏览器和服务器进行数据交互，进行超文本（文本、图片、视频等）传输的规定。也就是说，"),t("code",[v._v("HTTP")]),v._v(" 协议规定了超文本传输所要遵守的规则。")])]),v._v(" "),t("p",[v._v("通过 "),t("code",[v._v("HTTP")]),v._v(" 或者 "),t("code",[v._v("HTTPS")]),v._v(" 协议请求的资源由统一资源标识符URL(Uniform Resource Identifiers)来标识。")]),v._v(" "),t("h2",{attrs:{id:"http-特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-特点"}},[v._v("#")]),v._v(" "),t("code",[v._v("HTTP")]),v._v(" 特点")]),v._v(" "),t("hr"),v._v(" "),t("p",[t("code",[v._v("http")]),v._v(" 主要有以下几个特点:")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("仅支持(客户端/服务端)模式。意味着该请求只能通过客户端发起,服务端响应。")])]),v._v(" "),t("li",[t("p",[v._v("简单快速、灵活。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("HTTP")]),v._v(" 协议是无状态的。这意味着客户端和服务端之间无法知晓当前对方的状态信息，"),t("code",[v._v("HTTP")]),v._v(" 请求本身是不带有任何状态存储的。但实际情况下，客户端和服务端必然需要状态的认证和交互，所以就引入了 "),t("code",[v._v("Cookie")]),v._v("、"),t("code",[v._v("Session")]),v._v("， 用于存储当前浏览器的一些状态信息，每次通过独立的 "),t("code",[v._v("HTTP")]),v._v(" 请求进行收发，从而解决这个问题。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("HTTP")]),v._v(" 请求互相独立。"),t("code",[v._v("HTTP")]),v._v(" 互相之间都是一个独立的个体请求，在客户端请求网页时多数情况下并不是一次请求就能成功的，服务端首先是响应 "),t("code",[v._v("HTML")]),v._v(" 页面，然后浏览器收到响应之后发现页面还引用了其他的资源，例如，"),t("code",[v._v("CSS")]),v._v("，"),t("code",[v._v("JS")]),v._v(" 文件，图片等等，还会自动发送 "),t("code",[v._v("HTTP")]),v._v(" 请求获取这些需要的资源。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("HTTP")]),v._v(" 协议基于 "),t("code",[v._v("TCP")]),v._v(" 协议。"),t("code",[v._v("HTTP")]),v._v(" 协议目的是规定客户端和服务端数据传输的格式和数据交互行为，并不负责数据传输的细节，底层是基于 "),t("code",[v._v("TCP")]),v._v(" 实现的。现在使用的版本当中是默认持久连接的，也就是多次 "),t("code",[v._v("HTTP")]),v._v(" 请求使用一个 "),t("code",[v._v("TCP 连接")]),v._v("。")])])]),v._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"title"},[v._v("WARNING")]),t("p",[v._v("注意："),t("code",[v._v("HTTP")]),v._v(" 请求和 "),t("code",[v._v("TCP")]),v._v(" 连接是不一样的，"),t("code",[v._v("HTTP")]),v._v(" 是在 "),t("code",[v._v("TCP")]),v._v(" 连接建立的基础上而发起的传输请求，在同一个 "),t("code",[v._v("TCP")]),v._v(" 连接通道下，可以发送多个 "),t("code",[v._v("HTTP")]),v._v(" 请求，举个例子的话就是高速公路和车子的关系。")])]),t("h2",{attrs:{id:"http-请求响应模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-请求响应模型"}},[v._v("#")]),v._v(" "),t("code",[v._v("HTTP")]),v._v(" 请求响应模型")]),v._v(" "),t("hr"),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(" 由请求和响应构成，是一个标准的客户端服务器模型("),t("code",[v._v("B/S")]),v._v(")。")]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(" 协议永远是客户端发起，然后服务器返回响应。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js45.png",alt:"请求响应模型"}})]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("HTTP")]),v._v(" 是一个无状态的协议。")]),v._v(" "),t("p",[v._v("无状态是指客户机（"),t("code",[v._v("Web浏览器")]),v._v("）和服务器之间不需要建立持久的连接，这意味着当一个客户端向服务器端发出请求，然后服务器返回响应("),t("code",[v._v("response")]),v._v(")，连接就被关闭了，在服务器端不保留连接的有关信息.")]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(" 遵循请求("),t("code",[v._v("Request")]),v._v(")/应答("),t("code",[v._v("Response")]),v._v(")模型。客户机（"),t("code",[v._v("浏览器")]),v._v("）向服务器发送请求，服务器处理请求并返回适当的应答。所有 "),t("code",[v._v("HTTP")]),v._v(" 连接都被构造成一套请求和应答。")])]),t("h2",{attrs:{id:"osi七层网络模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#osi七层网络模型"}},[v._v("#")]),v._v(" "),t("code",[v._v("OSI")]),v._v("七层网络模型")]),v._v(" "),t("hr"),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js46.png",alt:"七层网络模型"}})]),v._v(" "),t("h3",{attrs:{id:"物理层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#物理层"}},[v._v("#")]),v._v(" 物理层")]),v._v(" "),t("blockquote",[t("p",[v._v("通过光缆、电缆、无线电波等方式将设备连接起来组网，以二进制的数据形式在物理媒体上传输比特流0和1。")])]),v._v(" "),t("p",[t("strong",[v._v("主要解决的问题:")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("尽可能屏蔽物理设备、传输媒体和通讯手段的不同,使上面的数据链路层感觉不到这些差异的存在,而专注于完成本层的协议与服务。")])]),v._v(" "),t("li",[t("p",[v._v("考虑的是怎么样才能在连接各种计算机的传输媒体上传输数据比特流。")])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("数据形式")]),v._v(" "),t("th",[v._v("数据单位")]),v._v(" "),t("th",[v._v("典型代表")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("二进制数据")]),v._v(" "),t("td",[v._v("比特(bit)")]),v._v(" "),t("td",[v._v("V.35、RJ-45(8P8C网线插头)")])])])]),v._v(" "),t("h3",{attrs:{id:"数据链路层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据链路层"}},[v._v("#")]),v._v(" 数据链路层")]),v._v(" "),t("blockquote",[t("p",[v._v("根据以太网的协议将一组电信号组成一个数据包，称作帧，通过使用包含纠错和控制信息的方式实现在不可靠的物理线路上进行数据的可靠传递")])]),v._v(" "),t("ul",[t("li",[v._v("帧的组成:")])]),v._v(" "),t("ol",[t("li",[v._v("标头 "),t("code",[v._v("head")]),v._v("： 标明数据发送者、接收者、数据类型等。")]),v._v(" "),t("li",[v._v("数据的 "),t("code",[v._v("data")])])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("传播方式：\n广播，发送者将数据表，发送给局域网内的所有"),t("code",[v._v("PC")]),v._v("，让每个"),t("code",[v._v("PC")]),v._v("根据"),t("code",[v._v("MAC")]),v._v("地址自动匹配。")])]),v._v(" "),t("li",[t("p",[v._v("常用协议解释：")])])]),v._v(" "),t("ol",[t("li",[t("code",[v._v("SLIP")]),v._v("(串行线路"),t("code",[v._v("IP")]),v._v(")。")]),v._v(" "),t("li",[t("code",[v._v("PPP")]),v._v("(点到点协议)。")])]),v._v(" "),t("h3",{attrs:{id:"mac地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mac地址"}},[v._v("#")]),v._v(" MAC地址")]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("MAC")]),v._v("（"),t("code",[v._v("Media Access Control")]),v._v("，介质访问控制）地址专注于数据链路层，将一个数据帧从一个节点传送到相同链路的另一个节点，所以也叫物理地址、硬件地址或链路地址，由网络设备制造商生产时写在硬件内部。")])]),v._v(" "),t("p",[t("code",[v._v("MAC")]),v._v("地址与网络无关，也即无论将带有这个地址的硬件（如网卡、集线器、路由器等）接入到网络的何处，都有相同的MAC地址，它由厂商写在网卡的"),t("code",[v._v("BIOS")]),v._v("里。")]),v._v(" "),t("p",[t("code",[v._v("MAC")]),v._v("地址长度为6字节（"),t("code",[v._v("48比特")]),v._v("）长度，分为前24位和后24位：前24位是由生产网卡的厂商向"),t("code",[v._v("IEEE")]),v._v("申请的厂商地址，后24位由厂商自行分配，这样的分配使得世界上任意一个拥有48位"),t("code",[v._v("MAC")]),v._v("地址的网卡都有唯一的标识。")]),v._v(" "),t("h3",{attrs:{id:"网络层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[v._v("#")]),v._v(" 网络层")]),v._v(" "),t("blockquote",[t("p",[v._v("在数据链路层提供的两个相邻端点之间的数据帧的传送功能上，进一步管理网络中的数据通信，将网络地址翻译成对应的物理地址，将数据设法从源端经过若干个中间节点传送到目的端，从而向运输层提供最基本的端到端的数据传送服务。")])]),v._v(" "),t("p",[t("strong",[v._v("常用协议解释:")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("IP")]),v._v("("),t("code",[v._v("Internet Protocal")]),v._v(")网络协议")]),v._v(" "),t("li",[t("code",[v._v("ARP")]),v._v("("),t("code",[v._v("Address Resolution Protocal")]),v._v(")地址解析协议")]),v._v(" "),t("li",[t("code",[v._v("ICMP")]),v._v("("),t("code",[v._v("Internet Control Message Protocal")]),v._v(")因特网控制消息协议")]),v._v(" "),t("li",[t("code",[v._v("HDLC")]),v._v("("),t("code",[v._v("High Data Link Control")]),v._v(")高级数据链路控制。")])]),v._v(" "),t("h3",{attrs:{id:"传输层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传输层"}},[v._v("#")]),v._v(" 传输层")]),v._v(" "),t("blockquote",[t("p",[v._v("通过流量控制及调整发送速率等方式为上层提供端到端的透明的、可靠的数据传输服务。")])]),v._v(" "),t("p",[t("strong",[v._v("常用协议解释:")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("TCP")]),v._v("(Transition Control Protocal)传输控制协议")]),v._v(" "),t("li",[t("code",[v._v("UDP")]),v._v("(User Data Protocal)用户数据协议")])]),v._v(" "),t("h3",{attrs:{id:"会话层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#会话层"}},[v._v("#")]),v._v(" 会话层")]),v._v(" "),t("blockquote",[t("p",[v._v("不参与具体的传输，提供了包括访问验证和会话管理在内的建立和维护应用之间通信的机制。")])]),v._v(" "),t("h3",{attrs:{id:"表示层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表示层"}},[v._v("#")]),v._v(" 表示层")]),v._v(" "),t("blockquote",[t("p",[v._v("根据不同网络类型提供格式化的表示和转换数据服务。数据的压缩和解压缩， 加密和解密等工作都由表示层负责。")])]),v._v(" "),t("p",[v._v("###应用层")]),v._v(" "),t("blockquote",[t("p",[v._v("为操作系统或网络应用程序提供访问网络服务的接口。")])]),v._v(" "),t("p",[t("strong",[v._v("常用协议解释:")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("HTTP")]),v._v("("),t("code",[v._v("HyperText Transfer Protocal")]),v._v(")超文本传输协议")]),v._v(" "),t("li",[t("code",[v._v("FTP")]),v._v("("),t("code",[v._v("File Transfer Protocal")]),v._v(")文件传输协议")]),v._v(" "),t("li",[t("code",[v._v("SMTP")]),v._v("("),t("code",[v._v("Simple Mall Transfer Protocal")]),v._v(")简单邮件传输协议")]),v._v(" "),t("li",[t("code",[v._v("POP3")]),v._v("("),t("code",[v._v("Post Office Protocal")]),v._v(")邮局协议")]),v._v(" "),t("li",[t("code",[v._v("DNS")]),v._v("("),t("code",[v._v("Domain Name System)")]),v._v("域名系统")]),v._v(" "),t("li",[t("code",[v._v("TCP/IP")]),v._v(" 协议族")])]),v._v(" "),t("h2",{attrs:{id:"tcp-ip-协议族"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip-协议族"}},[v._v("#")]),v._v(" TCP/IP 协议族")]),v._v(" "),t("hr"),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("TCP/IP")]),v._v(" 协议（传输控制协议/互联网协议）不是简单的一个协议，而是一组特别的协议，包括："),t("code",[v._v("TCP")]),v._v("，"),t("code",[v._v("IP")]),v._v("，"),t("code",[v._v("UDP")]),v._v("，"),t("code",[v._v("ARP等")]),v._v("，这些被称为子协议。在这些协议中，最重要、最著名的就是 "),t("code",[v._v("TCP")]),v._v(" 和 "),t("code",[v._v("IP")]),v._v("。因此我们习惯将整个协议族称为 "),t("code",[v._v("TCP/IP")]),v._v("。")])]),v._v(" "),t("ul",[t("li",[t("strong",[t("code",[v._v("IP")]),v._v(" 协议:")])])]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("IP")]),v._v(" 协议使互联网成为一个允许连接不同类型的计算机和不同操作系统的网络。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("IP")]),v._v(" 地址是 "),t("code",[v._v("IP")]),v._v(" 协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，相当于这台机器的暂用名，别的机器可以通过这个名字找到它，进而能互相建立起连接进行通信和交流。")])])]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("TCP 协议:")])])]),v._v(" "),t("div",{staticClass:"language-markdown line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-markdown"}},[t("code",[t("span",{pre:!0,attrs:{class:"token list punctuation"}},[v._v("1.")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[v._v("`TCP`")]),v._v(" 协议是面向连接的全双工协议，因此不管是客户端还是服务端都能在 "),t("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[v._v("`TCP`")]),v._v(" 连接通道下向对端接收和发送数据。\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[v._v("2.")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[v._v("`TCP`")]),v._v(" 相比于 "),t("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[v._v("`UDP`")]),v._v(" 的优势在于它的传输稳定性，在数据传输之前必须经过三次握手建立连接；在数据传输过程中必须保证数据有序完整地传到对端。\n\n"),t("span",{pre:!0,attrs:{class:"token list punctuation"}},[v._v("3.")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[v._v("`TCP`")]),v._v(" 相比于 "),t("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[v._v("`UDP`")]),v._v(" 的劣势在于它的复杂度，连接建立、断开都是比较大的性能开销，而且数据传输过程中一旦卡住，则必须等前面的数据发送完毕以后，后续数据才能继续传输。\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br")])]),t("p",[v._v("每台服务器可提供支持的 TCP 连接数量是有限的，所以这也使得 TCP 连接变成了稀缺资源，经不起浪费。")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("UDP 协议:")])])]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("UDP")]),v._v(" 协议是面向无连接的，不需要在传输数据前先建立连接，想发就发想传就传。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("UDP")]),v._v(" 做的工作只是报文搬运，不负责有序且不丢失地传递到对端，因此容易出现丢包的情况。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("UDP")]),v._v(" 不仅支持一对一的传输方式，还支持一对多、多对多、多对一的方式，也就是说 "),t("code",[v._v("UPD")]),v._v(" 提供了单播、多播、广播的功能。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("UDP")]),v._v(" 相比于 "),t("code",[v._v("TCP")]),v._v(" 的优势在于它的轻量、高效和灵活，在一些对于实时性应用要求较高的场景下需要使用到 "),t("code",[v._v("UDP")]),v._v("，比如直播、视频会议、"),t("code",[v._v("LOL")]),v._v(" 等实时对战游戏。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("UDP")]),v._v(" 相比于 "),t("code",[v._v("TCP")]),v._v(" 的劣势在于它的不可靠性和不稳定性。")])])]),v._v(" "),t("h2",{attrs:{id:"tcp-连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-连接"}},[v._v("#")]),v._v(" TCP 连接")]),v._v(" "),t("hr"),v._v(" "),t("p",[v._v("在客户端发送正式的 "),t("code",[v._v("HTTP")]),v._v(" 请求之前，需要先创建一个 "),t("code",[v._v("TCP")]),v._v(" 连接，在创建的 "),t("code",[v._v("TCP Connect")]),v._v(" 通道下，所有的 "),t("code",[v._v("HTTP")]),v._v(" 请求和响应才能正常的发送和接受。")]),v._v(" "),t("p",[t("strong",[v._v("在不同的 "),t("code",[v._v("HTTP")]),v._v(" 协议版本里，这个 "),t("code",[v._v("TCP")]),v._v(" 连接通道的创建和持续机制也有所不同。")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("在 "),t("code",[v._v("HTTP1.0")]),v._v(" 中，每一次 "),t("code",[v._v("HTTP")]),v._v(" 请求都会创建一个 "),t("code",[v._v("TCP")]),v._v(" 连接，在请求发送完成，服务器响应以后，这个 "),t("code",[v._v("TCP")]),v._v(" 连接就自动断开了。")])]),v._v(" "),t("li",[t("p",[v._v("在 "),t("code",[v._v("HTTP1.1")]),v._v("中，可以通过手动设置 "),t("code",[v._v("Connection： keep-alive")]),v._v(" 请求头来建立 "),t("code",[v._v("TCP")]),v._v(" 的持久连接，多个 "),t("code",[v._v("HTTP")]),v._v(" 请求可以共用一个 "),t("code",[v._v("TCP")]),v._v(" 连接。但是 "),t("code",[v._v("TCP")]),v._v(" 连接存在线头阻塞，即若干个请求排队等待发送，一旦有某请求超时等，后续请求只能被阻塞。")])]),v._v(" "),t("li",[t("p",[v._v("在 "),t("code",[v._v("HTTP2.0")]),v._v(" 中，采用了信道复用，使 "),t("code",[v._v("TCP")]),v._v(" 连接支持并发请求，即多个请求可同时在一个连接上并行执行。某个请求任务耗时严重，不会影响到其它连接的正常执行吗，这样一来，大部分请求可以使用一个 "),t("code",[v._v("TCP")]),v._v(" 连接，而不用创建新的 "),t("code",[v._v("TCP")]),v._v(" 连接通道，既节省了三次握手的开销，又节约了服务端维护 "),t("code",[v._v("TCP")]),v._v(" 端口的成本。")])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("如何查看 "),t("code",[v._v("TCP")]),v._v(" 连接复用:\n图上可以看到有不同的 "),t("code",[v._v("Connection ID")]),v._v("，这就代表着本次请求实际上是开启了一个新的 "),t("code",[v._v("TCP")]),v._v(" 连接，如果请求的 "),t("code",[v._v("Connection ID")]),v._v(" 都是相同的，代表着多个 "),t("code",[v._v("HTTP")]),v._v(" 请求复用了同一个 "),t("code",[v._v("TCP")]),v._v(" 连接。")])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"title"},[v._v("WARNING")]),t("p",[t("code",[v._v("Chrome")]),v._v(" 浏览器所能够支持的最大并发 "),t("code",[v._v("TCP")]),v._v(" 连接数是 6 个知乎上的视频链接，并且在 "),t("code",[v._v("HTTP 2.0")]),v._v(" 以下的 "),t("code",[v._v("HTTP")]),v._v(" 版本中，请求是阻塞的。也就是说，一旦六个连接开满，前面的请求未完成，那么后续请求就会被阻塞，直到前面的请求返回，后续才能继续发送。")])]),t("h2",{attrs:{id:"http-工作过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-工作过程"}},[v._v("#")]),v._v(" HTTP 工作过程")]),v._v(" "),t("p",[v._v("一次 "),t("code",[v._v("HTTP")]),v._v(" 操作称为一个事务，其工作整个过程如下：")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("地址解析")]),v._v("\n如用客户端浏览器请求这个页面："),t("code",[v._v("localhost.com:8080/index.htm")])])]),v._v(" "),t("p",[v._v("从中分解出"),t("code",[v._v("协议名")]),v._v("、"),t("code",[v._v("主机名")]),v._v("、"),t("code",[v._v("端口")]),v._v("、"),t("code",[v._v("对象路径")]),v._v("等部分，对于我们的这个地址，解析得到的结果如下：")]),v._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("协议名：http\n主机名：localhost.com\n端口：8080\n对象路径：/index.htm\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br")])]),t("p",[v._v("在这一步，需要域名系统 "),t("code",[v._v("DNS")]),v._v(" 解析域名 "),t("code",[v._v("localhost.com")]),v._v(" ,得到主机的 "),t("code",[v._v("IP")]),v._v(" 地址。")]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[t("strong",[v._v("封装 HTTP 请求数据包")]),v._v("\n把以上部分结合本机自己的信息，封装成一个 "),t("code",[v._v("HTTP")]),v._v(" 请求数据包")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("封装成 "),t("code",[v._v("TCP")]),v._v(" 包，建立 "),t("code",[v._v("TCP")]),v._v(" 连接（"),t("code",[v._v("TCP")]),v._v(" 的三次握手）")])])])]),v._v(" "),t("p",[v._v("在 "),t("code",[v._v("HTTP")]),v._v(" 工作开始之前，客户机（"),t("code",[v._v("Web 浏览器")]),v._v("）首先要通过网络与服务器建立连接，该连接是通过 "),t("code",[v._v("TCP")]),v._v(" 来完成的，该协议与 "),t("code",[v._v("IP")]),v._v(" 协议共同构建 "),t("code",[v._v("Internet")]),v._v("，即著名的"),t("code",[v._v("TCP/IP")]),v._v("协议族，因此"),t("code",[v._v("Internet")]),v._v("又被称作是"),t("code",[v._v("TCP/IP")]),v._v("网络。")]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(" 是比 "),t("code",[v._v("TCP")]),v._v(" 更高层次的应用层协议，根据规则，只有低层协议建立之后才能，才能进行高层协议的连接，因此，首先要建立 "),t("code",[v._v("TCP")]),v._v(" 连接，一般 "),t("code",[v._v("TCP")]),v._v(" 连接的端口号是 "),t("code",[v._v("80")]),v._v("。这里是"),t("code",[v._v("8080")]),v._v("端口。")]),v._v(" "),t("p",[t("strong",[v._v("补充")]),v._v(":三次握手")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js48.png",alt:"三次握手"}})]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("提示：关于 "),t("code",[v._v("ACK")]),v._v("、"),t("code",[v._v("FIN")]),v._v("、"),t("code",[v._v("SYN")]),v._v(" 状态码的含义")]),v._v(" "),t("p",[t("code",[v._v("ACK")]),v._v(" 用于确认，表示通知对方，我已经收到你发来的信息了。")]),v._v(" "),t("p",[t("code",[v._v("FIN")]),v._v(" 用于结束，表示告知对方，我这边已经结束，数据全部发送完毕，没有后续输出，请求终止连接。")]),v._v(" "),t("p",[t("code",[v._v("SYN")]),v._v(" 用于同步和建立连接，表示告知对方，我这边请求同步建立连接。")])]),t("ul",[t("li",[t("p",[v._v("第一次握手：由客户端向服务端发送连接请求 SYN 报文，该报文段中包含自身的数据通讯初始序号，请求发送后，客户端便进入 SYN-SENT 状态。")])]),v._v(" "),t("li",[t("p",[v._v("第二次握手：服务端收到连接请求报文段后，如果同意连接，则会发送一个包含了 "),t("code",[v._v("ACK")]),v._v(" 和 "),t("code",[v._v("SYN")]),v._v(" 报文信息的应答，该应答中也会包含自身的数据通讯初始序号（在断开连接的“四次挥手”时，"),t("code",[v._v("ACK")]),v._v(" 和 "),t("code",[v._v("SYN")]),v._v(" 这两个报文是作为两次应答，独立开来发送的，因此会有四次挥手），服务端发送完成后便进入 "),t("code",[v._v("SYN-RECEIVED")]),v._v(" 状态。")])]),v._v(" "),t("li",[t("p",[v._v("第三次握手：当客户端收到连接同意的应答后，还要向服务端发送一个确认报文。客户端发完这个报文段后便进入 "),t("code",[v._v("ESTABLISHED")]),v._v(" 状态，服务端收到这个应答后也进入 "),t("code",[v._v("ESTABLISHED")]),v._v(" 状态，此时连接建立成功。")])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("strong",[v._v("面试时可能会问的一个问题就是，明明两次握手就能确定的连接，为什么需要三次握手？")])]),v._v(" "),t("p",[v._v("因为由于很多不可控制的因素，例如网络原因，可能会造成第一次请求隔了很久才到达服务端，这个时候客户端已经等待响应等了很久，之前发起的请求已超时，已经被客户端废弃掉不再继续守着监听了。")]),v._v(" "),t("p",[v._v("然而服务端过了很久，收到了废弃的延迟请求，发起回应的同时又开启了一个新的 TCP 连接端口，在那里呆等客户端。")]),v._v(" "),t("p",[v._v("而服务端能维护的 "),t("code",[v._v("TCP")]),v._v(" 连接是有限的，这种闲置的无用链接会造成服务端的资源浪费。")]),v._v(" "),t("p",[v._v("因此在服务端发送了 "),t("code",[v._v("SYN")]),v._v(" 和 "),t("code",[v._v("ACK")]),v._v(" 响应后，需要收到客户端接的再次确认，双方连接才能正式建立起来。"),t("code",[v._v("三次握手就是为了规避这种由于网络延迟而导致服务器额外开销的问题")]),v._v("。")])]),t("p",[t("strong",[v._v("补充：四次挥手")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js47.png",alt:"四次挥手"}})]),v._v(" "),t("p",[v._v("和建立 "),t("code",[v._v("TCP")]),v._v(" 连接类似，断开 "),t("code",[v._v("TCP")]),v._v(" 连接也同样需要客户端于服务端的双向交流，因为整个断开动作需要双端共发送 4 个数据包才能完成，所以简称为“四次挥手”。")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("第一次挥手：客户端认为自己这边的数据已经全部发送完毕了，于是发送一个 FIN 用来关闭客户端到服务端的数据传输，发送完成以后，客户端进入 FIN_WAIT_1 状态。")])]),v._v(" "),t("li",[t("p",[v._v("第二次挥手：服务端收到客户端发送回来的 FIN 以后，会告诉应用层要释放 TCP 链接，并且发送一个 ACK 给客户端，表明已经收到客户端的释放请求了，不会再接受客户端发来的数据，自此，服务端进入 CLOSE_WAIT 的状态。")])]),v._v(" "),t("li",[t("p",[v._v("第三次挥手：服务端如果此时还有未发送完的数据可以继续发送，发送完毕后，服务端也会发送一个释放连接的 FIN 请求用来关闭服务端到客户端的数据传送，然后服务端进入 LAST_ACK 状态。")])]),v._v(" "),t("li",[t("p",[v._v("第四次挥手：客户端接收到服务端的 FIN 请求后，发送最后一个 ACK 给服务端，接着进入 TIME_WAIT_2 状态，该状态会持续 2MSL（最大段生存期，指报文段在网络中生存的时间，超时会被抛弃） 时间，若该时间段内没有服务端的重发请求的话，客户端就进入 CLOSED 状态.服务端在收到应答消息后，也会进入 CLOSED 状态，至此完成四次挥手的过程，双方正式断开连接。")])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("可能有些面试中会问，为什么建立连接有三次握手，而断开连接却有四次？")]),v._v(" "),t("p",[v._v("这是因为在建立连接过程中，服务端在收到客户但建立连接请求的 SYN 报文后，会把 ACK 和 SYN 放在一个报文里发送给客户端。 而关闭连接时，服务端收到客户端的 FIN 报文，只是表示客户端不再发送数据了，但是还能接收数据，而且这会儿服务端可能还有数据没有发送完，不能马上发送 FIN 报文，只能先发送 ACK 报文，先响应客户端，在确认自己这边所有数据发送完毕以后，才会发送 FIN。 所以，在断开连接时，服务器的 ACK 和 FIN 一般都会单独发送，这就导致了断开连接比请求连接多了一次发送操作。")])]),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[v._v("客户机发送请求命令")])])]),v._v(" "),t("p",[v._v("一旦端对端成功建立起了 "),t("code",[v._v("TCP")]),v._v(" 连接，下一步就要开始发送正式的 HTTP 请求了，请求方式的格式为："),t("code",[v._v("统一资源标识符（URL）")]),v._v("、"),t("code",[v._v("协议版本号")]),v._v("，后边是"),t("code",[v._v("MIME")]),v._v("信息包括"),t("code",[v._v("请求修饰符")]),v._v("、"),t("code",[v._v("客户机信息")]),v._v("和"),t("code",[v._v("可见内容")]),v._v("。")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("流淌在 "),t("code",[v._v("TCP Connect")]),v._v(" 通道里的 "),t("code",[v._v("HTTP")]),v._v(" 只负责传输数据包，并没有连接的概念，因此 "),t("code",[v._v("HTTP")]),v._v(" 也被叫做无状态协议。")])]),t("ol",{attrs:{start:"5"}},[t("li",[t("strong",[v._v("服务器响应")])])]),v._v(" "),t("p",[v._v("服务器接到请求后，给予相应的响应信息，其格式为一个"),t("code",[v._v("状态行")]),v._v("，包括信息的"),t("code",[v._v("协议版本号")]),v._v("、"),t("code",[v._v("一个成功或错误的代码")]),v._v("，后边是"),t("code",[v._v("MIME")]),v._v("信息包括服务器信息、实体信息和可能的内容。")]),v._v(" "),t("p",[v._v("实体消息是服务器向浏览器发送头信息后，它会发送一个空白行来表示头信息的发送到此为结束，接着，它就以Content-Type应答头信息所描述的格式发送用户所请求的实际数据。")]),v._v(" "),t("ol",{attrs:{start:"6"}},[t("li",[t("strong",[v._v("服务器关闭 "),t("code",[v._v("TCP")]),v._v(" 连接")])])]),v._v(" "),t("p",[v._v("一般情况下，一旦"),t("code",[v._v("Web")]),v._v("服务器向浏览器发送了请求数据，它就要关闭"),t("code",[v._v("TCP")]),v._v("连接，然后如果浏览器或者服务器在其头信息加入了这行代码:")]),v._v(" "),t("div",{staticClass:"language-textmate line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("Connection: keep - alive;\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[t("code",[v._v("TCP")]),v._v("连接在发送后将仍然保持打开状态，于是，浏览器可以继续通过相同的连接发送请求。保持连接节省了为每个请求建立新连接所需的时间，还节约了网络带宽。")]),v._v(" "),t("h3",{attrs:{id:"http-工作过程用到的概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-工作过程用到的概念"}},[v._v("#")]),v._v(" "),t("code",[v._v("HTTP")]),v._v(" 工作过程用到的概念")]),v._v(" "),t("p",[t("strong",[v._v("报文格式")])]),v._v(" "),t("p",[t("code",[v._v("HTTP1.0")]),v._v(" 的报文有两种类型：请求和响应。其报文格式分别为：")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("请求报文格式")]),v._v(" "),t("ul",[t("li",[v._v("请求方法 URL HTTP/版本号")]),v._v(" "),t("li",[v._v("请求首部字段(可选)")]),v._v(" "),t("li",[v._v("空行")]),v._v(" "),t("li",[v._v("body(只对 Post 请求有效)")])])]),t("div",{staticClass:"language-textmate line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("GET http://m.baidu.com/ HTTP/1.1\nHost m.baidu.com\nConnection Keep-Alive\n...// 其他header\nkey=iOS\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("响应报文格式")]),v._v(" "),t("ul",[t("li",[v._v("HTTP/版本号 返回码 返回码描述")]),v._v(" "),t("li",[v._v("应答首部字段(可选)")]),v._v(" "),t("li",[v._v("空行")]),v._v(" "),t("li",[v._v("body")])])]),t("div",{staticClass:"language-textmate line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("HTTP/1.1 200 OK\nContent-Type text/html;charset=UTF-8\n...// 其他header\n\n<html>...\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br")])]),t("h3",{attrs:{id:"url-的结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#url-的结构"}},[v._v("#")]),v._v(" "),t("code",[v._v("URL")]),v._v(" 的结构")]),v._v(" "),t("p",[v._v("使用 "),t("code",[v._v("HTTP")]),v._v(" 协议访问资源是通过"),t("code",[v._v("URL（Uniform Resource Locator）")]),v._v("统一资源定位符来实现的。"),t("code",[v._v("URL")]),v._v(" 的格式如下：")]),v._v(" "),t("div",{staticClass:"language-textmate line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("scheme://host:port/path?query\n\nscheme: 表示协议，如http, https, ftp等；\nhost: 表示所访问资源所在的主机名：如：www.baidu.com;\nport: 表示端口号，默认为80；\npath: 表示所访问的资源在目标主机上的储存路径；\nquery: 表示查询条件；\n\n例如： http://www.baidu.com/search?words=Baidu\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br")])]),t("h3",{attrs:{id:"http-的请求方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-的请求方法"}},[v._v("#")]),v._v(" "),t("code",[v._v("HTTP")]),v._v(" 的请求方法")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("GET")]),v._v(": 获取 "),t("code",[v._v("URL")]),v._v(" 指定的资源。")]),v._v(" "),t("li",[t("code",[v._v("POST")]),v._v("：一般用于传输实体信息。")]),v._v(" "),t("li",[t("code",[v._v("PUT")]),v._v("：一般用于上传文件。")]),v._v(" "),t("li",[t("code",[v._v("DELETE")]),v._v("：删除文件。")]),v._v(" "),t("li",[t("code",[v._v("HEAD")]),v._v("：获取报文首部，与 "),t("code",[v._v("GET")]),v._v(" 相比，不返回报文主体部分。")]),v._v(" "),t("li",[t("code",[v._v("OPTIONS")]),v._v("：用于预检请求中，询问请求 "),t("code",[v._v("URI")]),v._v(" 资源支持的方法。")]),v._v(" "),t("li",[t("code",[v._v("TRACE")]),v._v("：追踪请求的路径；。")]),v._v(" "),t("li",[t("code",[v._v("CONNECT")]),v._v("：要求在与代理服务器通信时建立隧道，使用隧道进行 "),t("code",[v._v("TCP")]),v._v(" 通信。主要使用 "),t("code",[v._v("SSL")]),v._v(" 和 "),t("code",[v._v("TLS")]),v._v(" 将数据加密后通过网络隧道进行传输。")])]),v._v(" "),t("h3",{attrs:{id:"报文字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#报文字段"}},[v._v("#")]),v._v(" 报文字段")]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(' 首部字段由字段名和字段值组成，中间以":"分隔，如'),t("code",[v._v("Content-Type: text/html")]),v._v(".其中，同一个字段名可对应多个字段值。")]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(" 的报文字段分为 5 种：")]),v._v(" "),t("ol",[t("li",[v._v("请求报文字段")]),v._v(" "),t("li",[v._v("应答报文字段")]),v._v(" "),t("li",[v._v("实体首部字段")]),v._v(" "),t("li",[v._v("通用报文字段")]),v._v(" "),t("li",[v._v("其他报文字段")])]),v._v(" "),t("p",[t("strong",[v._v("请求报文字段")])]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(" 请求中支持的报文字段。")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("Accept")]),v._v("：客户端能够处理的媒体类型。如"),t("code",[v._v("text/html")]),v._v(", 表示客户端让服务器返回"),t("code",[v._v("html")]),v._v("类型的数据，如果没有，返回"),t("code",[v._v("text")]),v._v("类型的也可以。媒体类型的格式一般为："),t("code",[v._v("type/subType")]),v._v(", 表示优先请求"),t("code",[v._v("subType")]),v._v("类型的数据，如果没有，返回 "),t("code",[v._v("type")]),v._v(" 类型数据也可以。")])]),v._v(" "),t("p",[t("strong",[v._v("常见的媒体类型：")])]),v._v(" "),t("ol",[t("li",[v._v("文本文件："),t("code",[v._v("text/html")]),v._v(", "),t("code",[v._v("text/plain")]),v._v(", "),t("code",[v._v("text/css")]),v._v(", "),t("code",[v._v("application/xml")])]),v._v(" "),t("li",[v._v("图片文件："),t("code",[v._v("image/jpeg")]),v._v(", "),t("code",[v._v("image/gif")]),v._v(", "),t("code",[v._v("image/png")])]),v._v(" "),t("li",[v._v("视频文件："),t("code",[v._v("video/mpeg")])]),v._v(" "),t("li",[v._v("应用程序使用的二进制文件："),t("code",[v._v("application/octet-stream")]),v._v(", "),t("code",[v._v("application/zip")])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("Accept")]),v._v("字段可设置多个字段值，这样服务器依次进行匹配，并返回最先匹配到的媒体类型，当然，也可通过 q 参数来设置 媒体类型的权重，权重越高，优先级越高。q 的取值为[0, 1], 可取小数点后 3 位，默认为 1.0。例如： "),t("code",[v._v("Accept: text/html")]),v._v(","),t("code",[v._v("application/xml; q=0.9, */*")])])]),t("ul",[t("li",[t("p",[t("code",[v._v("Accept-Charset")]),v._v(": 表示客户端支持的字符集。例如："),t("code",[v._v("Accept-Charset: GB2312, ISO-8859-1")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Accept-Encoding")]),v._v("： 表示客户端支持的内容编码格式。如："),t("code",[v._v("Accept-Encoding：gzip")])])])]),v._v(" "),t("p",[t("strong",[v._v("常用的内容编码：")])]),v._v(" "),t("ol",[t("li",[t("code",[v._v("gzip")]),v._v(": 由文件压缩程序"),t("code",[v._v("gzip")]),v._v("生成的编码格式；")]),v._v(" "),t("li",[t("code",[v._v("compress")]),v._v(": 由"),t("code",[v._v("Unix")]),v._v("文件压缩程序"),t("code",[v._v("compress")]),v._v("生成的编码格式；")]),v._v(" "),t("li",[t("code",[v._v("deflate")]),v._v(": 组合使用"),t("code",[v._v("zlib")]),v._v("和"),t("code",[v._v("deflate")]),v._v("压缩算法生成的编码格式；")]),v._v(" "),t("li",[t("code",[v._v("identity")]),v._v("：默认的编码格式，不执行压缩。")])]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("Accept-Language")]),v._v("：表示客户端支持的语言。如："),t("code",[v._v("Accept-Language: zh-cn, en")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Authorization")]),v._v("：表示客户端的认证信息。客户端在访问需要认证的也是时，服务器会返回 "),t("code",[v._v("401")]),v._v("，随后客户端将认证信息加在"),t("code",[v._v("Authorization")]),v._v("字段中发送到服务器后，如果认证成功，则返回 "),t("code",[v._v("200")]),v._v(". 如 "),t("code",[v._v("Linux")]),v._v(" 公社下的 "),t("code",[v._v("Ftp")]),v._v(" 服务器就是这种流程："),t("code",[v._v("ftp://ftp1.linuxidc.com")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Host")]),v._v(": 表示访问资源所在的主机名，即 "),t("code",[v._v("URL")]),v._v(" 中的域名部分。如：m.baidu.com")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("If-Match")]),v._v(": "),t("code",[v._v("If-Match")]),v._v("的值与所请求资源的 "),t("code",[v._v("ETag")]),v._v(" 值（实体标记，与资源相关联。资源变化，实体标记跟着变化）一致时，服务器才处理此请求。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("If-Modified-Since")]),v._v(": 用于确认客户端拥有的本地资源的时效性。 如果客户端请求的资源在 "),t("code",[v._v("If-Modified-Since")]),v._v(" 指定的时间后发生了改变，则服务器处理该请求。如："),t("code",[v._v("If-Modified-Since:Thu 09 Jul 2018 00:00:00")]),v._v(", 表示如果客户端请求的资源在 2018 年 1 月 9 号 0 点之后发生了变化，则服务器处理改请求。通过该字段我们可解决以下问题：有一个包含大量数据的接口，且实时性较高，我们在刷新时就可使用改字段，从而避免多余的流量消耗。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("If-None-Match")]),v._v(": "),t("code",[v._v("If-Match")]),v._v("的值与所请求资源的 "),t("code",[v._v("ETag")]),v._v(" 值不一致时服务器才处理此请求。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("If-Range")]),v._v("： "),t("code",[v._v("If-Range")]),v._v(" 的值（"),t("code",[v._v("ETag")]),v._v(" 值或时间）与所访问资源的 "),t("code",[v._v("ETag")]),v._v(" 值或时间相一致时，服务器处理此请求，并返回 "),t("code",[v._v("Range")]),v._v(" 字段中设置的指定范围的数据。如果不一致，则返回所有内容。"),t("code",[v._v("If-Range")]),v._v(" 其实算是 "),t("code",[v._v("If-Match")]),v._v(" 的升级版，因为它的值不匹配时，依然能够返回数据，而 "),t("code",[v._v("If-Match")]),v._v(" 不匹配时，请求不会被处理，需要数据时需再次进行请求。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("If-Unmodified-Since")]),v._v("：与"),t("code",[v._v("If-Modified-Since")]),v._v("相反，表示请求的资源在指定的时间之后未发生变化时，才处理请求，否则返回 412。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Max-Forwards")]),v._v("：表示请求可经过的服务器的最大数目，请求每被转发一次，"),t("code",[v._v("Max-Forwards")]),v._v("减 1，当 "),t("code",[v._v("Max-Forwards")]),v._v(" 为 0 时，所在的服务器将不再转发，而是直接做出应答。通过此字段可定位通信问题，比如之前支付宝光纤被挖断，就可通过设置 "),t("code",[v._v("Max-Forwards")]),v._v(" 来定位大概的位置。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Proxy-Authorization")]),v._v("：当客户端接收到来自代理服务器的认证质询时，客户端会将认证信息添加到 "),t("code",[v._v("Proxy-Authorization")]),v._v(" 来完成认证。与 "),t("code",[v._v("Authorization")]),v._v(" 类似，只不过 "),t("code",[v._v("Authorization")]),v._v(" 是发生在客户端与服务端之间。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Range")]),v._v("：获取部分资源，例如："),t("code",[v._v("Range: bytes=500-1000")]),v._v(" 表示获取指定资源的第 500 到 1000 字节之间的内容，如果服务器能够正确处理，则返回 206 作为应答，表示返回了部分数据，如果不能处理这种范围请求，则以 200 作为应答，返回完整的数据，")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Referer")]),v._v("：告知服务器请求是从哪个页面发起的。例如在百度首页中搜索某个关键字，结果页面的请求头部就会有这个字段，其值为https://www.baidu.com/。通过这个字段可统计广告的点击情况。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("User-Agent")]),v._v("：将发起请求的浏览器和代理名称等信息发送给服务端，例如："),t("code",[v._v("User-Agent: Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36(KHTML, like Gecko) Chrome/63.0.3239.84 Mobile Safari/537.36")])])])]),v._v(" "),t("p",[t("strong",[v._v("应答报文字段")])]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v(" 应答中支持的报文字段。")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("Age")]),v._v("：服务端告知客户端，源服务器（而不是缓存服务器）在多久之前创建了响应。单位为秒。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("ETag")]),v._v("： 实体资源的标识，可用来请求指定的资源。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Location")]),v._v("：请求的资源所在的新位置。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Proxy-Authenticate")]),v._v("：将代理服务器需要的认证信息发送给客户端。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Retry-After")]),v._v("：服务端告知客户端多久之后再重试，一般与 503 和 3xx 重定向类型的应答一起使用。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Server")]),v._v("：告知服务端当前使用的HTTP服务器应用程序的相关信息。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("WWW-Authenticate")]),v._v("：告知客户端适用于所访问资源的认证方案，如Basic或Digest。401的响应中肯定带有WWW-Authenticate字段。")])])]),v._v(" "),t("p",[t("strong",[v._v("实体首部字段")])]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("Allow")]),v._v("：通知客户端，服务器所支持的请求方法。但服务器收到不支持的请求方法时，会以 405（"),t("code",[v._v("Method Not Allowed")]),v._v("）作为响应。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Content-Encoding")]),v._v("：告知客户端，服务器对资源的内容编码。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Content-Language")]),v._v("：告知客户端，资源所使用的自然语言。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Content-Length")]),v._v("：告知客户端资源的长度。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Content-Location")]),v._v("：告知客户端资源所在的位置。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Content-Type")]),v._v("：告知客户端资源的媒体类型，取值同请求首部字段中的 "),t("code",[v._v("Accept")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Expires")]),v._v("：告知客户端资源的失效日期。可用于对缓存的处理。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Last-Modified")]),v._v("：告知客户端资源最后一次修改的时间。")])])]),v._v(" "),t("p",[t("strong",[v._v("通用报文字段")])]),v._v(" "),t("p",[v._v("即可在"),t("code",[v._v("HTTP")]),v._v("请求中使用，也可在"),t("code",[v._v("HTTP")]),v._v("应答中使用的报文字段。")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("Cache-Control")]),v._v("：控制缓存行为；")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Connection")]),v._v("：管理持久连接，设置其值为"),t("code",[v._v("Keep-Alive")]),v._v("可实现长连接。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Date")]),v._v("：创建 "),t("code",[v._v("HTTP")]),v._v(" 报文的日期和时间。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Pragma")]),v._v("："),t("code",[v._v("Http/1.1")]),v._v("之前的历史遗留字段，仅作为"),t("code",[v._v("HTTP/1.0")]),v._v("向后兼容而定义，虽然是通用字段，当通常被使用在客户单的请求中，如 "),t("code",[v._v("Pragma: no-cache")]),v._v(", 表示客户端在请求过程中不循序服务端返回缓存的数据；")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Transfer-Encoding")]),v._v("：规定了传输报文主题时使用的传输编码，如"),t("code",[v._v("Transfer-Encoding: chunked")])])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Upgrade")]),v._v(": 用于检查 "),t("code",[v._v("HTTP")]),v._v(" 协议或其他协议是否有可使用的更高版本。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Via")]),v._v("：追踪客户端和服务端之间的报文的传输路径，还可避免会环的发生，所以在经过代理时必须添加此字段。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Warning")]),v._v("："),t("code",[v._v("Http/1.1")]),v._v("的报文字段，从"),t("code",[v._v("Http/1.0")]),v._v("的 "),t("code",[v._v("AfterRetry")]),v._v(" 演变而来，用来告知用户一些与缓存相关的警告信息。")])])]),v._v(" "),t("p",[t("strong",[v._v("其他报文字段")])]),v._v(" "),t("p",[v._v("这些字段不是HTTP协议中定义的，但被广泛应用于HTTP请求中。")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("Cookie")]),v._v("：属于请求型报文字段，在请求时添加 "),t("code",[v._v("Cookie")]),v._v(", 以实现"),t("code",[v._v("HTTP")]),v._v("的状态记录。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Set-Cookie")]),v._v("：属于应答型报文字段。服务器给客户端传递"),t("code",[v._v("Cookie")]),v._v("信息时，就是通过此字段实现的。")])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("Set-Cookie")]),v._v("的字段属性：")]),v._v(" "),t("p",[t("code",[v._v("NAME=VALUE")]),v._v("：赋予"),t("code",[v._v("Cookie")]),v._v("的名称和值；")]),v._v(" "),t("p",[t("code",[v._v("expires=DATE")]),v._v(": "),t("code",[v._v("Cookie")]),v._v("的有效期；")]),v._v(" "),t("p",[t("code",[v._v("path=PATH")]),v._v(": 将服务器上的目录作为"),t("code",[v._v("Cookie")]),v._v("的适用对象，若不指定，则默认为文档所在的文件目录；")]),v._v(" "),t("p",[t("code",[v._v("domin=域名")]),v._v("：作为"),t("code",[v._v("Cookies")]),v._v("适用对象的域名，若不指定，则默认为创建Cookie的服务器域名；")]),v._v(" "),t("p",[t("code",[v._v("Secure")]),v._v(": 仅在"),t("code",[v._v("HTTPS")]),v._v("安全通信是才会发送"),t("code",[v._v("Cookie")]),v._v("；")]),v._v(" "),t("p",[t("code",[v._v("HttpOnly")]),v._v(": 使"),t("code",[v._v("Cookie")]),v._v("不能被 "),t("code",[v._v("JS")]),v._v(" 脚本访问；")]),v._v(" "),t("p",[v._v("如："),t("code",[v._v("Set-Cookie:BDSVRBFE=Go; max-age=10; domain=m.baidu.com; path=/")])])]),t("h2",{attrs:{id:"http-应答状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-应答状态码"}},[v._v("#")]),v._v(" HTTP 应答状态码")]),v._v(" "),t("hr"),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("状态码")]),v._v(" "),t("th",[v._v("类别")]),v._v(" "),t("th",[v._v("描述")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("1xx")]),v._v(" "),t("td",[t("code",[v._v("Informational")]),v._v("(信息性状态码)")]),v._v(" "),t("td",[v._v("请求正在被处理")])]),v._v(" "),t("tr",[t("td",[v._v("2xx")]),v._v(" "),t("td",[t("code",[v._v("Success")]),v._v("(成功状态码)")]),v._v(" "),t("td",[v._v("请求处理成功")])]),v._v(" "),t("tr",[t("td",[v._v("3xx")]),v._v(" "),t("td",[t("code",[v._v("Redirection")]),v._v("(重定向状态码)")]),v._v(" "),t("td",[v._v("需要进行重定向")])]),v._v(" "),t("tr",[t("td",[v._v("4xx")]),v._v(" "),t("td",[t("code",[v._v("Client Error")]),v._v("(客户端状态码)")]),v._v(" "),t("td",[v._v("服务器无法处理请求")])]),v._v(" "),t("tr",[t("td",[v._v("5xx")]),v._v(" "),t("td",[t("code",[v._v("Server Error")]),v._v("(服务端状态码)")]),v._v(" "),t("td",[v._v("服务器处理请求时出错")])])])]),v._v(" "),t("p",[t("strong",[v._v("常见应答状态码")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js49.png",alt:"base-js49"}})]),v._v(" "),t("h2",{attrs:{id:"http-发展历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-发展历史"}},[v._v("#")]),v._v(" HTTP 发展历史")]),v._v(" "),t("hr"),v._v(" "),t("p",[t("strong",[v._v("HTTP 0.9 版本")])]),v._v(" "),t("ul",[t("li",[v._v("只有一个 "),t("code",[v._v("GET")]),v._v(" 命令。")]),v._v(" "),t("li",[v._v("没有请求头和响应头来描述传输相关的数据信息。")]),v._v(" "),t("li",[v._v("服务器发送完数据后，直接关闭 "),t("code",[v._v("TCP")]),v._v(" 连接，不支持 "),t("code",[v._v("TCP")]),v._v(" 持久化连接。")])]),v._v(" "),t("p",[t("strong",[v._v("HTTP 1.0 版本")])]),v._v(" "),t("ul",[t("li",[v._v("增加了很多命令，"),t("code",[v._v("HEAD")]),v._v("、"),t("code",[v._v("POST")]),v._v("、"),t("code",[v._v("PUT")]),v._v("、"),t("code",[v._v("DELETE")]),v._v(" 等。")]),v._v(" "),t("li",[v._v("增设了 "),t("code",[v._v("status code")]),v._v(" 状态码和 "),t("code",[v._v("header")]),v._v(" 请求头和响应头。")]),v._v(" "),t("li",[v._v("增加了多字符集支持、多部分发送、权限、缓存等。")]),v._v(" "),t("li",[v._v("可通过开启"),t("code",[v._v("Connection： keep-alive")]),v._v(" 来指定使用 "),t("code",[v._v("TCP")]),v._v(" 长连接")])]),v._v(" "),t("p",[t("strong",[v._v("HTTP 1.1 （目前普遍使用）")])]),v._v(" "),t("ul",[t("li",[v._v("默认支持持久连接")]),v._v(" "),t("li",[v._v("默认支持长连接（"),t("code",[v._v("PersistentConnection")]),v._v("），即默认开启 "),t("code",[v._v("Connection： keep-alive")]),v._v("。")]),v._v(" "),t("li",[v._v("支持请求的流水线（"),t("code",[v._v("Pipelining")]),v._v("）处理，即在一个 "),t("code",[v._v("TCP")]),v._v(" 连接上可以传送多个 "),t("code",[v._v("HTTP")]),v._v(" 请求和响应。")]),v._v(" "),t("li",[v._v("增加了 "),t("code",[v._v("host")]),v._v(" 请求头字段，通过对 "),t("code",[v._v("host")]),v._v(" 解析，就能够允许在同一台物理服务器上运行多个软件服务，极大提高了服务器的使用率。目前的 "),t("code",[v._v("nginx")]),v._v(" 反向代理就是根据 "),t("code",[v._v("HTTP")]),v._v(" 请求头中的 "),t("code",[v._v("host")]),v._v(" 来分辨不同的请求，从而将这些请求代理到同一台服务器不同的软件服务上。")])]),v._v(" "),t("p",[t("strong",[v._v("HTTP1.0 与 HTTP1.1 的一些区别")])]),v._v(" "),t("p",[v._v("HTTP 最早在网页中使用是 1996 年，而 HTTP1.1 是 1996 年后才开始广泛用于现在的各大浏览器网络请求中。")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[v._v("差异")])]),v._v(" "),t("th",[t("strong",[v._v("HTTP 1.0")])]),v._v(" "),t("th",[t("strong",[v._v("HTTP 1.1")])])])]),v._v(" "),t("tbody",[t("tr",[t("td",[t("strong",[v._v("缓存处理")])]),v._v(" "),t("td",[v._v("使用"),t("code",[v._v("header")]),v._v("里的"),t("code",[v._v("if-Modified-Since")]),v._v(","),t("code",[v._v("Expires")]),v._v("来作为缓存判断的标准。\t引入了更多的缓存控制策略，例如"),t("code",[v._v("Enity tag")]),v._v("、"),t("code",[v._v("if-Unmodified-Since")]),v._v("、"),t("code",[v._v("if-Match")]),v._v("、"),t("code",[v._v("if-None-Match")]),v._v("等更多可提供选择的缓存头来控制缓存策略。")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[t("strong",[v._v("带宽优化及网络连接的作用")])]),v._v(" "),t("td",[v._v("存在一些浪费带宽的现象，例如客户端只是需要某个对象的一部分，而服务器却将整个对象返回回来了，并且不支持断点续传的功能。\t在请求头中引入了"),t("code",[v._v("range")]),v._v("头域，他允许只请求资源的某个部分,即返回码是206("),t("code",[v._v("Partial Content")]),v._v("),这样就方便开发者自由的选择以便于充分利用带宽连接。")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[t("strong",[v._v("错误通知的管理")])]),v._v(" "),t("td",[v._v("-")]),v._v(" "),t("td",[v._v("新增了 24 个错误状态响应码，如 409("),t("code",[v._v("Conflict")]),v._v(")表示请求的资源与资源当前状态发生冲突，401("),t("code",[v._v("Gone")]),v._v(")表示服务器上的某个资源被永久性的删除。")])]),v._v(" "),t("tr",[t("td",[t("strong",[t("code",[v._v("Host")]),v._v(" 头处理")])]),v._v(" "),t("td",[v._v("认为每台服务器都绑定一个唯一的 "),t("code",[v._v("IP")]),v._v(" 地址，因此请求消息中的 "),t("code",[v._v("URL")]),v._v(" 并没有传递主机名("),t("code",[v._v("hostname")]),v._v(")。\t请求消息和响应消息都应支持"),t("code",[v._v("Host")]),v._v("头域，且消息请求中如果没有 "),t("code",[v._v("Host")]),v._v(" 头域会报告一个错误("),t("code",[v._v("400 Bad Request")]),v._v(")。")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[t("strong",[v._v("长连接")])]),v._v(" "),t("td",[v._v("-")]),v._v(" "),t("td",[v._v("开始支持长连接。")])])])]),v._v(" "),t("p",[t("strong",[v._v("HTTP 2.0")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("HTTP1.x")]),v._v(" 的解析是基于文本，存在解析上的缺陷；而 "),t("code",[v._v("HTTP2.0")]),v._v(" 直接使用二进制的解析方式来替代 "),t("code",[v._v("HTTP 1.X")]),v._v(" 的字符串解析，更为高效和健壮。")]),v._v(" "),t("li",[t("code",[v._v("HTTP2.0")]),v._v(" 所有数据以帧的方式进行传输，因此同一个连接中发送的多个请求不再需要按照顺序进行返回处理，可以达到并行的数据传输。")]),v._v(" "),t("li",[t("code",[v._v("HTTP2.0")]),v._v(" 压缩头信息进行传输数据量的优化。"),t("code",[v._v("HTTP1.x")]),v._v(" 的请求头带有大量信息，而且每次都要重复发送，"),t("code",[v._v("HTTP2.0")]),v._v(" 使用 "),t("code",[v._v("encoder")]),v._v(" 来减少需要传输的请求头大小，通讯双方各自缓存一份 "),t("code",[v._v("header fields")]),v._v(" 表，既避免了重复的传输，又减小了传输信息的大小。")]),v._v(" "),t("li",[t("code",[v._v("HTTP2.0")]),v._v(" 新增了 "),t("code",[v._v("server push（服务端推送）")]),v._v(" 的概念，服务端可以主动发起一些数据推送。比如，服务端在接收到浏览器发来的 "),t("code",[v._v("HTML")]),v._v(" 请求的同时，可以主动推送相关的资源文件（"),t("code",[v._v("js/css")]),v._v("）给客户端，并行发送，提高网页的传输和渲染效率。")]),v._v(" "),t("li",[v._v("目前如果要使用 "),t("code",[v._v("HTTP2")]),v._v(" 需要首先使用 "),t("code",[v._v("HTTPS")]),v._v(" 在这基础上，才能使用 "),t("code",[v._v("HTTP2")]),v._v("。")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("HTTP 2.0 相比于 HTTP 1 最直观的图片加载性能提升, "),t("a",{attrs:{href:"https://http2.akamai.com/demo",target:"_blank",rel:"noopener noreferrer"}},[v._v("HTTP 2 性能提升的官方演示"),t("OutboundLink")],1),v._v("。")])]),t("h2",{attrs:{id:"http-缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-缺点"}},[v._v("#")]),v._v(" HTTP 缺点")]),v._v(" "),t("hr"),v._v(" "),t("ol",[t("li",[v._v("通信使用明文，可能被窃听")]),v._v(" "),t("li",[v._v("不验证通信方的身份，可能遭遇伪装")]),v._v(" "),t("li",[v._v("无法证明报文的完整性，有可能遭遇篡改")])]),v._v(" "),t("p",[v._v("以上是 "),t("code",[v._v("HTTP")]),v._v(" 的缺点，这在网络通信中对企业安全是很致命的问题。那 "),t("code",[v._v("HTTPS")]),v._v(" 能解决这些问题吗？下面讲讲HTTPS。")]),v._v(" "),t("h2",{attrs:{id:"http-基本优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-基本优化"}},[v._v("#")]),v._v(" HTTP 基本优化")]),v._v(" "),t("hr"),v._v(" "),t("p",[v._v("影响一个 "),t("code",[v._v("HTTP")]),v._v(" 网络请求的因素主要有两个:"),t("code",[v._v("带宽")]),v._v("和"),t("code",[v._v("延迟")]),v._v("。")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("带宽:服务器资源相关")])]),v._v(" "),t("li",[t("p",[v._v("延迟")]),v._v(" "),t("ul",[t("li",[v._v("浏览器阻塞("),t("code",[v._v("HOL Blocking")]),v._v("):浏览器会因为一些原因阻塞请求。浏览器对于同一个域名，同时只能有固定个连接。")])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("浏览器")]),v._v(" "),t("th",[v._v("HTTP 1.1")]),v._v(" "),t("th",[v._v("HTTP 1.0")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("IE 6,7")]),v._v(" "),t("td",[v._v("2")]),v._v(" "),t("td",[v._v("4")])]),v._v(" "),t("tr",[t("td",[v._v("IE 8")]),v._v(" "),t("td",[v._v("6")]),v._v(" "),t("td",[v._v("6")])]),v._v(" "),t("tr",[t("td",[v._v("Firefox 2")]),v._v(" "),t("td",[v._v("2")]),v._v(" "),t("td",[v._v("8")])]),v._v(" "),t("tr",[t("td",[v._v("Firefox 3")]),v._v(" "),t("td",[v._v("6")]),v._v(" "),t("td",[v._v("6")])]),v._v(" "),t("tr",[t("td",[v._v("Safari")]),v._v(" "),t("td",[v._v("3, 4")]),v._v(" "),t("td",[v._v("4")])]),v._v(" "),t("tr",[t("td",[v._v("Chrome 1,2")]),v._v(" "),t("td",[v._v("6")]),v._v(" "),t("td",[v._v("?")])]),v._v(" "),t("tr",[t("td",[v._v("Chrome 3")]),v._v(" "),t("td",[v._v("4")]),v._v(" "),t("td",[v._v("4")])]),v._v(" "),t("tr",[t("td",[v._v("Opera")]),v._v(" "),t("td",[v._v("9.63,10.00alpha\t4")]),v._v(" "),t("td",[v._v("4")])])])]),v._v(" "),t("p",[v._v("超过浏览器最大连接数的限制，后续的请求就会被阻塞。")]),v._v(" "),t("ul",[t("li",[v._v("DNS 查询\n浏览器需要知道目标服务器的 "),t("code",[v._v("IP")]),v._v(" 才能建立连接。"),t("code",[v._v("DNS")]),v._v(" 就是将域名解析为 "),t("code",[v._v("IP")]),v._v("。\n可以利用 "),t("code",[v._v("DNS")]),v._v(" 缓存结果减少这个时间。")]),v._v(" "),t("li",[v._v("建立连接\n"),t("code",[v._v("HTTP")]),v._v(" 是基于"),t("code",[v._v("TCP")]),v._v("协议的。需要经过三次握手才能携带请求报文。")])])])]),v._v(" "),t("p",[t("strong",[t("code",[v._v("HTTP")]),v._v(" 与 "),t("code",[v._v("HTPPS")]),v._v(" 的一些区别")])]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("HTTPS")]),v._v(" 协议需要到 "),t("code",[v._v("CA")]),v._v(" 申请证书,一般免费证书比较少，需要付费。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("HTTP")]),v._v(" 协议运行在 "),t("code",[v._v("TCP")]),v._v(" 之上，所有的传输内容都是明文的，"),t("code",[v._v("HTTPS")]),v._v(" 运行在 "),t("code",[v._v("SSL/TSL")]),v._v(" 之上,"),t("code",[v._v("SSL/TSL")]),v._v(" 运行在 "),t("code",[v._v("TCP")]),v._v(" 上，所有传输内容都是加密的。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("HTTP")]),v._v(" 与 "),t("code",[v._v("HTTPS")]),v._v(" 采用完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("HTTPS")]),v._v(" 可以有效的防止运营商劫持,解决了防劫持的一个问题。")])])]),v._v(" "),t("p",[t("strong",[v._v("SPDY:HTTP1.x 的优化")])]),v._v(" "),t("p",[v._v("2012 年 google 如一声惊雷提出了 SPDY 的方案，优化了 HTTP1.x 的请求延迟，解决了 HTTP1.x 的安全性，具体如下:")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("降低延迟,针对 "),t("code",[v._v("HTTP")]),v._v(" 高延迟的问题，"),t("code",[v._v("SPDY")]),v._v(" 优雅的采用了"),t("code",[v._v("多路复用(multiplexing)")]),v._v("。")])])]),v._v(" "),t("p",[v._v("多路复用通过多个请求 "),t("code",[v._v("stream")]),v._v(" 共享一个 "),t("code",[v._v("tcp")]),v._v(" 连接的方式，解决了 "),t("code",[v._v("HOL blocking")]),v._v(" 的问题，降低了延迟同时提高了带宽的利用率。")]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[v._v("请求优先级("),t("code",[v._v("request piroritization")]),v._v(")。")])])]),v._v(" "),t("p",[v._v("多路复用带来一个新的问题是，在连接共享的基础之上有可能导致关键请求被阻塞。"),t("code",[v._v("SPDY")]),v._v(" 允许给每个 "),t("code",[v._v("request")]),v._v(" 设置优先级，这样重要的请求就会优先得到响应。比如浏览器加载首页，首页的 "),t("code",[v._v("html")]),v._v(" 内容应该优先展示，之后才是各种静态资源文件，脚本文件等加载，这样可以保证用户能第一时间看到网页的内容。")]),v._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[t("code",[v._v("header")]),v._v(" 压缩")])])]),v._v(" "),t("p",[v._v("前面提到的 "),t("code",[v._v("HTTP1.x")]),v._v(" 的 "),t("code",[v._v("header")]),v._v(" 很多时候是多余的。选择合适的压缩算法可以减小包的大小和数量。")]),v._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[v._v("基于 "),t("code",[v._v("HTTPS")]),v._v(" 的加密协议传输")])])]),v._v(" "),t("p",[t("code",[v._v("HTTPS")]),v._v(" 传输大大提高了数据传输的可靠性。")]),v._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[v._v("服务端推送("),t("code",[v._v("Server Push")]),v._v(")")])]),v._v(" "),t("p",[v._v("采用了 "),t("code",[v._v("SPDY")]),v._v(" 的网页，例如我的网页有一个 "),t("code",[v._v("style.css")]),v._v(" 的请求，在客户端收到 "),t("code",[v._v("style.css")]),v._v(" 数据的同时，服务端会将 "),t("code",[v._v("style.js")]),v._v(" 的文件推送到客户端，当客户端再次尝试获取 "),t("code",[v._v("style.js")]),v._v(" 时就可以直接从缓存中获取，不用再发请求了。")]),v._v(" "),t("p",[t("strong",[v._v("HTTP2.0:SPDY 的升级版")])]),v._v(" "),t("p",[v._v("HTTP2.0 是 SPDY 的升级版，基于 SPDY 设计。")]),v._v(" "),t("p",[t("strong",[v._v("HTTP2.0 与 SPDY 的区别")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("HTTP2.0 支持明文 HTTP 传输，而 SPDY 强制使用 HTTPS。")])]),v._v(" "),t("li",[t("p",[v._v("HTTP2.0 消息头压缩算法采用"),t("code",[v._v("HPACK(http://http2.github.io/http2-spec/compression.html)")]),v._v(",SPDY 采用"),t("code",[v._v("DEFLATE(http://zh.wikipedia.org/wiki/DEFLATE)")]),v._v("。")])])]),v._v(" "),t("p",[t("strong",[v._v("HTTP2.0 及 HTTP1.x 相比的新特性")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("新的二进制格式\n"),t("code",[v._v("HTTP1.x")]),v._v(" 的解析是基于文本的。基于文本协议的格式解析存在天然缺陷，文本的表现形式具有多样性，要做到健壮性考虑的场景必然很多，二进制则不同，只有 0 和 1 的组合。")])]),v._v(" "),t("li",[t("p",[v._v("多路复用\n即连接共享，即每个 "),t("code",[v._v("request")]),v._v(" 都是用作连接共享机制的。一个 "),t("code",[v._v("request")]),v._v(" 对应一个 "),t("code",[v._v("id")]),v._v("，这样一个连接上可以有多个 "),t("code",[v._v("request")]),v._v("，每个连接的 "),t("code",[v._v("request")]),v._v(" 可以随机的混杂在一起，接收方可以根据 "),t("code",[v._v("request")]),v._v(" 的 "),t("code",[v._v("id")]),v._v(" 将 "),t("code",[v._v("request")]),v._v(" 再归属到各自不同的服务端请求里面。")])]),v._v(" "),t("li",[t("p",[v._v("header 压缩\n"),t("code",[v._v("HTTP1.x")]),v._v(" 中的 "),t("code",[v._v("header")]),v._v(" 带有大量的信息，而且每次都要重复发送，"),t("code",[v._v("HTTP2.0")]),v._v(" 使用 "),t("code",[v._v("encoder")]),v._v(" 来减少需要传输的 "),t("code",[v._v("header")]),v._v(" 大小，通讯双方各自 "),t("code",[v._v("cache")]),v._v(" 一份 "),t("code",[v._v("header fields")]),v._v(" 表，既避免了重复 "),t("code",[v._v("header")]),v._v(" 的传输，又减小了需要传输的大小。")])]),v._v(" "),t("li",[t("p",[v._v("服务端推送")])])]),v._v(" "),t("p",[t("strong",[v._v("HTTP2.0 的升级改造")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("HTTP2.0 可以支持非 HTTPS，但是主流浏览器 Chorme，firefox 表示还是只支持基于 TLS 部署的 HTTP2.0 协议，所以要升级成 HTTP2.0 还是先升级 HTTPS 为好。")])]),v._v(" "),t("li",[t("p",[v._v("当你的网站升级为 HTTPS 之后，那么升级 HTTP2.0 就比较简单了，如果你使用了 nignx，只要在配置文件中启用相应的协议就可以了。("),t("a",{attrs:{href:"https://www.nginx.com/blog/nginx-1-9-5/",target:"_blank",rel:"noopener noreferrer"}},[v._v("参考地址"),t("OutboundLink")],1),v._v(")")])]),v._v(" "),t("li",[t("p",[v._v("在使用了 HTTP2.0 之后，原来的 HTTP1.x 怎么办?HTTP2.0 完全兼容 HTTP1.x 的语义,对于不支持 HTTP2.0 的浏览器,nginx 会自动向下兼容。")])])]),v._v(" "),t("p",[t("strong",[v._v("HTTP2.0 的多路复用 和 HTTP1.x 的长连接有什么区别？")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("HTTP/1.*一次请求-响应，建立一个连接，用完关闭。每一个请求都要建立一个连接。")])]),v._v(" "),t("li",[t("p",[v._v("HTTP/1.1 Pipeling 解决方式为，若干个请求排队串行化单线处理，后面的请求会等待前面请求的返回之后才能会的执行机会。一旦有某请求超时等，后续请求只能被阻塞，毫无办法，也就是人们常说的线头阻塞。")])]),v._v(" "),t("li",[t("p",[v._v("HTTP/2 多个请求可同时在一个连接上并行执行。某个请求任务耗时严重，不会影响到其他连接的正常执行。")])])]),v._v(" "),t("p",[t("strong",[v._v("服务端推送到底是什么？")])]),v._v(" "),t("p",[v._v("服务端推送能把客户端所需要的资源伴随着 "),t("code",[v._v("index.html")]),v._v(" 一起发送到客户端，省去了客户端重复请求的步骤。正因为没有发送请求，建立连接等操作，所以静态资源通过服务端推送的方式可以极大地提升速度。")]),v._v(" "),t("h2",{attrs:{id:"http-网络优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-网络优化"}},[v._v("#")]),v._v(" HTTP 网络优化")]),v._v(" "),t("hr"),v._v(" "),t("h3",{attrs:{id:"减少资源体积"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少资源体积"}},[v._v("#")]),v._v(" 减少资源体积")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("gzip")]),v._v(" 压缩\n"),t("code",[v._v("gzip")]),v._v(" 使用了 "),t("code",[v._v("LZ77")]),v._v(" 算法与 "),t("code",[v._v("Huffman")]),v._v(" 编码来压缩文件，重复度越高的文件可压缩的空间就越大")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("IP")]),t("p",[v._v("如何查看是否开启gzip？")]),v._v(" "),t("p",[v._v("—— 打开控制面板进入NetWork，右键选取response headers 选择查看Content-Encoding")]),v._v(" "),t("p",[v._v("Content-Encoding：内容编码格式gzip 和 deflate")]),v._v(" "),t("p",[v._v("如何使用gzip？")]),v._v(" "),t("p",[v._v("首先浏览器（也就是客户端）发送请求时，通过Accept-Encoding带上自己支持的内容编码格式列表\n服务端在接收到请求后，从中挑选出一种用来对响应信息进行编码，并通过Content-Encoding来说明服务端选定的编码信息\n浏览器在拿到响应正文后，依据Content-Encoding进行解压。")])]),t("p",[t("img",{attrs:{src:"/images/base-js50.png",alt:"gzip"}})]),v._v(" "),t("p",[v._v("我们可以看到图片中开启"),t("code",[v._v("gzip")]),v._v("压缩之后文件小了很多(越小的文件越不明显)")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("nginx")]),v._v(" 开启")])]),v._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[v._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("gzip")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[v._v("on")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("gzip_min_length")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("1k")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" // 不压缩临界值，大于1K的才压缩，一般不用改\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("gzip_comp_level")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("2")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" // 压缩级别，1-10，数字越大压缩的越细，时间也越长\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("gzip_types")]),v._v(" text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v(" // 进行压缩的文件类型\n\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("gzip_disable")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"MSIE [1-6]\\."')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("// ie兼容性不好所以放弃\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br"),t("span",{staticClass:"line-number"},[v._v("10")]),t("br")])]),t("ul",[t("li",[t("code",[v._v("webpack")]),v._v(" 开启")])]),v._v(" "),t("p",[t("code",[v._v("compression-webpack-plugin")]),v._v(" 这个插件可以提供功能")]),v._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" CompressionWebpackPlugin "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'compression-webpack-plugin'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\nplugins"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("push")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("CompressionWebpackPlugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("asset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'[path].gz[query]'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 目标文件名")]),v._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("algorithm")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'gzip'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 使用gzip压缩")]),v._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("test")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("RegExp")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v("'\\\\.(js|css)$'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 压缩 js 与 css),")]),v._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("threshold")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("10240")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 资源文件大于10240B=10kB时会被压缩")]),v._v("\n        "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("minRatio")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("0.8")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("// 最小压缩比达到0.8时才会被压缩")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br"),t("span",{staticClass:"line-number"},[v._v("10")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("webpack")]),v._v(" 的 "),t("code",[v._v("gzip")]),v._v(" 和 "),t("code",[v._v("nginx")]),v._v(" 的有什么关系？")]),v._v(" "),t("ol",[t("li",[t("p",[t("code",[v._v("nginx")]),v._v(" 没有开启"),t("code",[v._v("gzip")]),v._v("压缩,"),t("code",[v._v("webpack")]),v._v("打包出的"),t("code",[v._v(".gz文件")]),v._v("是用不到的")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("nginx")]),v._v(" 开启了 "),t("code",[v._v("gzip")]),v._v("，"),t("code",[v._v("nginx")]),v._v(" 查找静态资源是否存在已经压缩好的"),t("code",[v._v("gzip")]),v._v("压缩文件，如果没有则自行压缩（消耗 "),t("code",[v._v("cpu")]),v._v(" 但感知比较少）")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("nginx")]),v._v(" 开启 "),t("code",[v._v("gzip")]),v._v(" 压缩, "),t("code",[v._v("webpack")]),v._v(" 打包出的"),t("code",[v._v(".gz")]),v._v("文件被找到，提前（打包）压缩直接使用，减少了"),t("code",[v._v("nginx")]),v._v("的压缩损耗")])])])]),t("p",[t("strong",[v._v("gzip 是怎么压缩的？")])]),v._v(" "),t("p",[v._v("到这一步的都不是一般人了，我就简述一下:使用"),t("code",[v._v('"滑动窗口"')]),v._v("的方法，来寻找文件中的每一个匹配长度达到最小匹配的串，重复的内容以一个哈希值存储在字典表中并替换到匹配的串上，以此来达到压缩，因此重复度越高的文件可压缩的空间就越大。")]),v._v(" "),t("p",[t("strong",[v._v("源文件控制")])]),v._v(" "),t("ul",[t("li",[v._v("图片采用 "),t("code",[v._v("webp")]),v._v(" 格式")]),v._v(" "),t("li",[t("code",[v._v("http2")]),v._v("——头部压缩")])]),v._v(" "),t("p",[t("strong",[v._v("减少资源请求")])]),v._v(" "),t("h2",{attrs:{id:"http-缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-缓存"}},[v._v("#")]),v._v(" HTTP 缓存")]),v._v(" "),t("hr"),v._v(" "),t("blockquote",[t("p",[v._v("虽然 "),t("code",[v._v("HTTP")]),v._v(" 缓存不是必须的，但重用缓存的资源通常是必要的。然而常见的 "),t("code",[v._v("HTTP")]),v._v(" 缓存只能存储 "),t("code",[v._v("GET")]),v._v(" 响应，对于其他类型的响应则无能为力。缓存的关键主要包括 "),t("code",[v._v("request method")]),v._v(" 和目标 "),t("code",[v._v("URI")]),v._v("（一般只有 "),t("code",[v._v("GET")]),v._v(" 请求才会被缓存）。当 "),t("code",[v._v("Web")]),v._v(' 请求抵达缓存时，如果本地有"已缓存"的副本，就可以从本地存储设备而不是原始服务器中提取这个文档。')])]),v._v(" "),t("p",[t("strong",[v._v("缓存的流程")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js51.png",alt:"缓存的流程"}})]),v._v(" "),t("p",[t("strong",[v._v("缓存的优点")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("减少了冗余的数据传输，节省了网络费用。")])]),v._v(" "),t("li",[t("p",[v._v("缓解了网络瓶颈的问题，不需要更多的带宽就能够更快的加载页面。")])]),v._v(" "),t("li",[t("p",[v._v("降低了对原始服务器的要求，服务器可以更快的响应，避免过载的出现。")])]),v._v(" "),t("li",[t("p",[v._v("降低了距离延迟，因为从更远的地方加载会更加慢一点。")])])]),v._v(" "),t("p",[t("strong",[v._v("缓存的缺点")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("缓存中的数据可能和服务器中的数据不一致。")])]),v._v(" "),t("li",[t("p",[v._v("更加消耗内存。")])])]),v._v(" "),t("h3",{attrs:{id:"浏览器中的缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的缓存"}},[v._v("#")]),v._v(" 浏览器中的缓存")]),v._v(" "),t("p",[v._v("浏览器中的缓存主要分为"),t("code",[v._v("强缓存")]),v._v("和"),t("code",[v._v("协商缓存")]),v._v("。")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("浏览器进行资源请求时，会判断 "),t("code",[v._v("responese header")]),v._v(" 是否命中强缓存，如果命中，直接从本地读取缓存，不会发送请求到服务器。")])]),v._v(" "),t("li",[t("p",[v._v("如果未命中强缓存，会发送请求到服务器，判断协商缓存是否命中，如果命中的会，服务器会将请求返回(304),但是不会返回资源，告诉浏览器直接从本地读取缓存。如果不命中，服务器会直接返回资源。")])])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("对于前端浏览器环境来说，缓存读取位置是由先后顺序的，顺序分别是（由上到下寻找，找到即返回；找不到则继续）。")]),v._v(" "),t("ul",[t("li",[v._v("Service Worker")]),v._v(" "),t("li",[v._v("Memory Cache")]),v._v(" "),t("li",[v._v("Disk Cache")]),v._v(" "),t("li",[v._v("网络请求")])])]),t("p",[t("strong",[v._v("Service Worker")])]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("Service Worker")]),v._v(" 的缓存与浏览器其他内建的缓存机制不同，它可以让我们自由控制缓存哪些文件、如何匹配缓存、如何读取缓存，并且缓存是持续性的。")])]),v._v(" "),t("ul",[t("li",[v._v("浏览器优先查找。")]),v._v(" "),t("li",[v._v("持久存储。")]),v._v(" "),t("li",[v._v("可以更加灵活地控制存储的内容，可以选择缓存哪些文件、定义缓存文件的路由匹配规则等。")]),v._v(" "),t("li",[v._v("可以从 "),t("code",[v._v("Chrome")]),v._v(" 的 "),t("code",[v._v("F12")]),v._v(" 中，"),t("code",[v._v("Application -> Cache Storage")]),v._v(" 查看")])]),v._v(" "),t("p",[t("strong",[v._v("Memory Cache")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("memory cache")]),v._v(" 是内存中的缓存存储。")]),v._v(" "),t("li",[v._v("读取速度快。")]),v._v(" "),t("li",[v._v("存储空间较小。")]),v._v(" "),t("li",[v._v("存储时间短，当浏览器的 "),t("code",[v._v("tab")]),v._v(" 页被关闭，内存资源即被释放。")]),v._v(" "),t("li",[v._v("如果明确指定了 "),t("code",[v._v("Cache-Control")]),v._v(" 为 "),t("code",[v._v("no-store")]),v._v("，浏览器则不会使用 "),t("code",[v._v("memory-cache")]),v._v("。")])]),v._v(" "),t("p",[t("strong",[v._v("Disk Cache")])]),v._v(" "),t("ul",[t("li",[t("code",[v._v("Disk Cache")]),v._v(" 是硬盘中的缓存存储。")]),v._v(" "),t("li",[v._v("读取速度慢于 "),t("code",[v._v("Memory Cache")]),v._v(" ，快于网络请求。")]),v._v(" "),t("li",[v._v("存储空间较大。")]),v._v(" "),t("li",[v._v("持久存储。")]),v._v(" "),t("li",[t("code",[v._v("Disk Cache")]),v._v(" 严格依照 "),t("code",[v._v("HTTP")]),v._v(" 头信息中的字段来判断资源是否可缓存、是否要认证等。")]),v._v(" "),t("li",[v._v("经常听到的强缓存，协商缓存，以及 "),t("code",[v._v("Cache-Control")]),v._v(" 等，归于此类。")])]),v._v(" "),t("p",[t("strong",[v._v("网络请求")])]),v._v(" "),t("p",[v._v("如果一个请求的资源文件均未命中上述缓存策略，那么就会发起网络请求。浏览器拿到资源后，会把这个新资源加入缓存。")]),v._v(" "),t("h3",{attrs:{id:"cache-control"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[v._v("#")]),v._v(" Cache-Control")]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("HTTP/1.1")]),v._v("定义的 "),t("code",[v._v("Cache-Control")]),v._v(" 头用来区分对缓存机制的支持情况， 请求头和响应头都支持这个属性。通过它提供的不同的值来定义缓存策略。需要注意的是，数据变化频率很快的场景并不适合开启 "),t("code",[v._v("Cache-Control")]),v._v("。")])]),v._v(" "),t("p",[v._v("以下是 "),t("code",[v._v("Cache-Control")]),v._v(" 常用字段的解释:")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("字段说明")]),v._v(" "),t("th",[v._v("说明")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("public")]),v._v(" "),t("td",[v._v("公共缓存：表示该响应可以被任何中间人（比如中间代理、CDN 等）缓存。")])]),v._v(" "),t("tr",[t("td",[v._v("private")]),v._v(" "),t("td",[v._v("私有缓存：表示该响应是专用于某单个用户的，中间人不能缓存此响应，该响应只能应用于浏览器私有缓存中。")])]),v._v(" "),t("tr",[t("td",[v._v("max-age")]),v._v(" "),t("td",[v._v("（单位/秒）设置缓存的过期时间，过期需要重新请求，否则就读取本地缓存，并不实际发送请求")])]),v._v(" "),t("tr",[t("td",[v._v("s-maxage")]),v._v(" "),t("td",[v._v("（单位/秒）覆盖 max-age，作用一样，只在代理服务器中生效")])]),v._v(" "),t("tr",[t("td",[v._v("max-stale")]),v._v(" "),t("td",[v._v("（单位/秒）表示即使缓存过期，也使用这个过期缓存")])]),v._v(" "),t("tr",[t("td",[v._v("no-store")]),v._v(" "),t("td",[v._v("禁止进行缓存")])]),v._v(" "),t("tr",[t("td",[v._v("no-transform")]),v._v(" "),t("td",[v._v("不得对资源进行转换或压缩等操作，Content-Encoding、Content-Range、Content-Type 等 HTTP 头不能由代理修改（有时候资源比较大的情况下，代理服务器可能会自行做压缩处理，这个指令就是为了防止这种情况）。")])]),v._v(" "),t("tr",[t("td",[v._v("no-cache")]),v._v(" "),t("td",[v._v("强制确认缓存：即每次使用本地缓存之前，需要请求服务器，查看缓存是否失效，若未过期（注：实际就是返回 304），则缓存才使用本地缓存副本。")])]),v._v(" "),t("tr",[t("td",[v._v("must-revalidate")]),v._v(" "),t("td",[v._v("缓存验证确认：意味着缓存在考虑使用一个陈旧的资源时，必须先验证它的状态，已过期的缓存将不被使用")])]),v._v(" "),t("tr",[t("td",[v._v("proxy-revalidate")]),v._v(" "),t("td",[v._v("与 must-revalidate 作用相同，但它仅适用于共享缓存（例如代理），并被私有缓存忽略。")])])])]),v._v(" "),t("h3",{attrs:{id:"强缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[v._v("#")]),v._v(" 强缓存")]),v._v(" "),t("p",[v._v("到底什么是强缓存？强在哪？")]),v._v(" "),t("p",[v._v("其实强是强制的意思。当浏览器去请求某个文件的时候，服务端就在respone header里面对该文件做了缓存配置。缓存的时间、缓存类型都由服务端控制。")]),v._v(" "),t("p",[v._v("具体表现为："),t("code",[v._v("respone header")]),v._v(" 的 "),t("code",[v._v("cache-control")]),v._v("，常见的设置是"),t("code",[v._v("max-age")]),v._v("、 "),t("code",[v._v("public")]),v._v("、 "),t("code",[v._v("private")]),v._v(" 、"),t("code",[v._v("no-cache")]),v._v(" 、"),t("code",[v._v("no-store")]),v._v("等以及返回头设置"),t("code",[v._v("Expires")]),v._v("字段。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js52.png",alt:"字段说明"}})]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("max-age")]),v._v("表示缓存的时间是 315360000 秒（10 年）")]),v._v(" "),t("p",[t("code",[v._v("public")]),v._v("表示可以被浏览器和代理服务器缓存")]),v._v(" "),t("p",[t("code",[v._v("immutable")]),v._v("表示即使用户刷新浏览器也不会去请求服务器")]),v._v(" "),t("p",[t("code",[v._v("from memory cache")]),v._v("表示从内存中读取缓存")]),v._v(" "),t("p",[t("code",[v._v("from disk cache")]),v._v("表示从磁盘中读取缓存")])]),t("p",[t("code",[v._v("Expires")]),v._v("是一个"),t("code",[v._v("GMT")]),v._v("时间格式字符串,浏览器第一次请求的时候,服务器会在返回头部加上 "),t("code",[v._v("Expires")]),v._v("，下次请求的时候如果在这个时间之前那么命中缓存。")]),v._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[v._v("app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"/"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("req"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" res")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" cssContent "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"./html/index.html"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  fs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("readFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("cssContent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("setHeader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Expires"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("+")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("2592000000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("toUTCString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("强缓存总结")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("cache-control: max-age=xxxx，public")]),v._v("\n客户端和代理服务器都可以缓存该资源；")])]),v._v(" "),t("p",[v._v("客户端在 xxx 秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,"),t("code",[v._v("statu code:200")]),v._v(" ，如果用户做了刷新操作，就向服务器发起 "),t("code",[v._v("http")]),v._v(" 请求。")]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("code",[v._v("cache-control: max-age=xxxx，private")]),v._v("\n只让客户端可以缓存该资源；代理服务器不缓存")])]),v._v(" "),t("p",[v._v("客户端在 xxx 秒内直接读取缓存,"),t("code",[v._v("statu code:200")])]),v._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("p",[t("code",[v._v("cache-control: max-age=xxxx，immutable")]),v._v("\n客户端在 xxx 秒的有效期内，如果有请求该资源的需求的话就直接读取缓存,"),t("code",[v._v("statu code:200")]),v._v("，即使用户做了刷新操作，也不向服务器发起 "),t("code",[v._v("http")]),v._v(" 请求")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("cache-control: no-cache")]),v._v("\n跳过设置强缓存，但是不妨碍设置协商缓存；一般如果你做了强缓存，只有在强缓存失效了才走协商缓存的，设置了"),t("code",[v._v("no-cache")]),v._v("就不会走强缓存了，每次请求都会询问服务端。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("cache-control: no-store")]),v._v("\n不缓存，这个会让客户端、服务器都不缓存，也就没有所谓的强缓存、协商缓存了。")])])])]),t("h3",{attrs:{id:"协商缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[v._v("#")]),v._v(" 协商缓存")]),v._v(" "),t("p",[v._v("上面说到的强缓存就是给资源设置个过期时间，客户端每次请求资源时都会看是否过期；只有在过期才会去询问服务器。所以，强缓存就是为了给客户端自给自足用的。")]),v._v(" "),t("p",[v._v("而当某天，客户端请求该资源时发现其过期了，这时就会去请求服务器了，而这时候去请求服务器的这过程就可以设置协商缓存。这时候，协商缓存就是需要客户端和服务器两端进行交互的。")]),v._v(" "),t("blockquote",[t("p",[v._v("协议缓存主要是利用"),t("code",[v._v("Last-Modified")]),v._v("、"),t("code",[v._v("If-Modified-Since")]),v._v("和"),t("code",[v._v("Etag")]),v._v("、"),t("code",[v._v("If-None-Match")]),v._v("来实现。")])]),v._v(" "),t("p",[t("strong",[v._v("Last-Modified")])]),v._v(" "),t("p",[v._v("顾名思义，就是资源的最新一次修改时间。当客户端访问服务端的资源，服务端会将这个 "),t("code",[v._v("Last-Modified")]),v._v(" 值返回给客户端，客户端收到之后，下次发送请求就会将服务端返回回来的 "),t("code",[v._v("Last-Modified")]),v._v(" 值装在 "),t("code",[v._v("If-Modified-Since")]),v._v(" 或者 "),t("code",[v._v("If-Unmodified-Since")]),v._v(" 里，发送给服务端进行缓存校验。")]),v._v(" "),t("p",[v._v("这样服务器就可以通过读取 "),t("code",[v._v("If-Modified-Since")]),v._v(" （较常用）或 "),t("code",[v._v("If-UnModified-Since")]),v._v(" 的值，和本地的 "),t("code",[v._v("Last-Modified")]),v._v(" 值做对比校验。如果校验发现这两个值是一样的，就代表本次请求的资源文件没有被修改过，那么服务器就会告诉浏览器，资源有效，可以继续使用，否则就需要使用最新的资源。")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("Last-Modified")]),v._v(":表示为实体头部部分，"),t("code",[v._v("response")]),v._v("返回，表示为资源的最后更新时间,精确到秒。")]),v._v(" "),t("p",[t("code",[v._v("If-Modified-Since")]),v._v(":通过比较两次的时间判断，资源在请求期间是否有修改，假如没有修改，则命中协商缓存，浏览器从缓存中读取资源，如果没有命中，资源有过修改，返回新的"),t("code",[v._v("Last-Modified")]),v._v("和服务器资源。")])]),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[v._v("app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"/"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("req"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" res")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" cssContent "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"./html/index.html"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  fs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("stat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("cssContent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("req"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("headers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"if-modified-since"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("===")]),v._v(" start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("mtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("toUTCString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n      res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("writeHead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("304")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Not Modified"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n      res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("else")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n      fs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("readFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("cssContent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("let")]),v._v(" lastModified "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("mtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("toUTCString")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("setHeader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Last-Modified"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" lastModified"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("writeHead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("200")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"OK"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br"),t("span",{staticClass:"line-number"},[v._v("10")]),t("br"),t("span",{staticClass:"line-number"},[v._v("11")]),t("br"),t("span",{staticClass:"line-number"},[v._v("12")]),t("br"),t("span",{staticClass:"line-number"},[v._v("13")]),t("br"),t("span",{staticClass:"line-number"},[v._v("14")]),t("br"),t("span",{staticClass:"line-number"},[v._v("15")]),t("br"),t("span",{staticClass:"line-number"},[v._v("16")]),t("br")])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"title"},[v._v("WARNING")]),t("p",[v._v("有些情况下仅判断最后修改日期来验证资源是否有改动是不够的：")]),v._v(" "),t("p",[v._v("存在周期性重写某些资源，但资源实际包含的内容并无变化；\n被修改的信息并不重要，如注释等；\nLast-Modified无法精确到毫秒，但有些资源更新频率有时会小于一秒。")])]),t("p",[t("strong",[v._v("ETag")])]),v._v(" "),t("p",[t("code",[v._v("Etag")]),v._v(" 的作用本质上和 "),t("code",[v._v("Last-Modified")]),v._v(" 差别不大。相比于 "),t("code",[v._v("Last-Modified")]),v._v(" 使用最后修改日期来比较资源是否失效的缓存校验策略，"),t("code",[v._v("ETag")]),v._v(" 则是通过数据签名来做一个更加严格的缓存验证。")]),v._v(" "),t("p",[v._v("所谓数据签名，其实就是通过对资源内容进行一个唯一的签名标记，一旦资源内容改变，那么签名必将改变，服务端就以此签名作为暗号，来标记缓存的有效性。典型的做法是针对资源内容进行一个 "),t("code",[v._v("hash")]),v._v(" 计算，类似于 "),t("code",[v._v("webpack")]),v._v(" 打包线上资源所加的 hash 标识,随服务器response返回。")]),v._v(" "),t("p",[v._v("和 "),t("code",[v._v("Last-Modified")]),v._v(" 对应 "),t("code",[v._v("If-Modified-Since")]),v._v(" 相同，"),t("code",[v._v("ETag")]),v._v(" 也会对应 "),t("code",[v._v("If-Match")]),v._v(" 或者 "),t("code",[v._v("If-None-Match")]),v._v("（"),t("code",[v._v("If-None-Match")]),v._v(" 比较常用），如果前后的签名相同，则不需要返回新的资源内容。")]),v._v(" "),t("p",[t("code",[v._v("If-None-Match")]),v._v(": 服务器比较请求头中的 "),t("code",[v._v("If-None-Match")]),v._v(" 和当前资源中的 "),t("code",[v._v("ETag")]),v._v(" 是否一致，来判断资源是否修改过，如果没有修改，则命中缓存，浏览器从缓存中读取资源，如果修改过，服务器会返回新的 "),t("code",[v._v("ETag")]),v._v("，并返回资源；")]),v._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[v._v("app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("get")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"/home"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("req"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" res")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" cssContent "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("join")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"./html/index.html"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  fs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("stat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("cssContent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" start")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("let")]),v._v(" etag "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("md5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("cssContent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("req"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("headers"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"if-none-match"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("===")]),v._v(" etag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n      res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("writeHead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("304")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Not Modified"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n      res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("else")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n      fs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("readFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("cssContent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" data")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n        res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("setHeader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Etag"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" etag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("writeHead")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[v._v("200")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"OK"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n        res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br"),t("span",{staticClass:"line-number"},[v._v("10")]),t("br"),t("span",{staticClass:"line-number"},[v._v("11")]),t("br"),t("span",{staticClass:"line-number"},[v._v("12")]),t("br"),t("span",{staticClass:"line-number"},[v._v("13")]),t("br"),t("span",{staticClass:"line-number"},[v._v("14")]),t("br"),t("span",{staticClass:"line-number"},[v._v("15")]),t("br"),t("span",{staticClass:"line-number"},[v._v("16")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("Last-Modified")]),v._v(" 和 "),t("code",[v._v("ETag")]),v._v(" 只是给服务端提供了一个控制缓存有效期的手段，并没有任何强制缓存的作用，最终决定是否使用缓存、还是使用新的资源文件，还是需要靠服务端指定对应的 "),t("code",[v._v("http code")]),v._v(" 来决定。对于保存在服务器上的文件，都有最后修改日期的属性，当使用 "),t("code",[v._v("Last-Modified")]),v._v(" 可以利用这个有效的属性进行数据缓存验证；或者在数据库存入一个 "),t("code",[v._v("updatetime")]),v._v(" 字段来标识具体的修改日期，从而判断缓存是否有效。")]),v._v(" "),t("p",[t("strong",[v._v("协商缓存步骤总结:")])]),v._v(" "),t("ol",[t("li",[v._v("请求资源时，把用户本地该资源的 "),t("code",[v._v("ETag")]),v._v(" 同时带到服务端，服务端和最新资源做对比。")]),v._v(" "),t("li",[v._v("如果资源没更改，返回 304，浏览器读取本地缓存。")]),v._v(" "),t("li",[v._v("如果资源有更改，返回 200，返回最新的资源。")])]),v._v(" "),t("p",[v._v("不推荐使用 "),t("code",[v._v("Expires")]),v._v(" 首部，它指定的是实际的过期日期而不是秒数。")]),v._v(" "),t("p",[t("code",[v._v("HTTP设计者")]),v._v("后来认为，由于很多服务器的时钟都不同步，或者不正确，所以最好还是用剩余秒数，而不是绝对时间来表示过期时间。")]),v._v(" "),t("p",[t("code",[v._v("ETag")]),v._v("解决了"),t("code",[v._v("Last-Modified")]),v._v("使用时可能出现的资源的时间戳变了但内容没变及如果再一秒钟以内资源变化但"),t("code",[v._v("Last-Modified")]),v._v("没变的问题，感觉 "),t("code",[v._v("ETag")]),v._v(" 更加稳妥。")]),v._v(" "),t("p",[v._v("补充：根据浏览器缓存策略，"),t("code",[v._v("Expires")]),v._v(" 和 "),t("code",[v._v("Cache-Control")]),v._v(" 用回车、后退、F5 刷新会跳过本地缓存，每次都会从服务器中获数据。")])]),t("h2",{attrs:{id:"https-定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https-定义"}},[v._v("#")]),v._v(" HTTPS 定义")]),v._v(" "),t("hr"),v._v(" "),t("blockquote",[t("p",[v._v("超文本传输安全协议（"),t("code",[v._v("Hypertext Transfer Protocol Secure")]),v._v("，缩写："),t("code",[v._v("HTTPS")]),v._v("，常称为"),t("code",[v._v("HTTP over TLS")]),v._v("，"),t("code",[v._v("HTTP over SSL")]),v._v("或"),t("code",[v._v("HTTP Secure")]),v._v("）是一种通过计算机网络进行安全通信的传输协议。"),t("code",[v._v("HTTPS")]),v._v(" 经由 "),t("code",[v._v("HTTP")]),v._v(" 进行通信，但利用"),t("code",[v._v("SSL/TLS")]),v._v("来加密数据包。")])]),v._v(" "),t("p",[t("code",[v._v("HTTP")]),v._v("协议采用明文传输信息，存在信息窃听、信息篡改和信息劫持的风险，而协议"),t("code",[v._v("TLS/SSL")]),v._v("具有身份验证、信息加密和完整性校验的功能，可以避免此类问题发生。")]),v._v(" "),t("p",[t("code",[v._v("TLS/SSL")]),v._v("全称安全传输层协议"),t("code",[v._v("Transport Layer Security")]),v._v(", 是介于"),t("code",[v._v("TCP")]),v._v("和"),t("code",[v._v("HTTP")]),v._v("之间的一层安全协议，不影响原有的"),t("code",[v._v("TCP")]),v._v("协议和"),t("code",[v._v("HTTP")]),v._v("协议，所以使用"),t("code",[v._v("HTTPS")]),v._v("基本上不需要对"),t("code",[v._v("HTTP")]),v._v("页面进行太多的改造。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js53.png",alt:"HTTPS 定义"}})]),v._v(" "),t("p",[t("code",[v._v("HTTPS")]),v._v("是在"),t("code",[v._v("HTTP")]),v._v("上建立"),t("code",[v._v("SSL")]),v._v("加密层，并对传输数据进行加密，是"),t("code",[v._v("HTTP")]),v._v("协议的安全版。"),t("code",[v._v("HTTPS")]),v._v("主要作用是：")]),v._v(" "),t("ul",[t("li",[v._v("对数据进行加密，并建立一个信息安全通道，来保证传输过程中的数据安全。")]),v._v(" "),t("li",[v._v("对网站服务器进行真实身份认证。")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("简单的总结就是: "),t("code",[v._v("HTTPS")]),v._v(" ="),t("code",[v._v("HTTP+加密+认证+完整性保护")]),v._v("。")]),v._v(" "),t("p",[v._v("上述出现的各种广告也是由于 HTTP 在传输时被劫持而导致的。")])]),t("h2",{attrs:{id:"tls-ssl-工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tls-ssl-工作原理"}},[v._v("#")]),v._v(" TLS/SSL 工作原理")]),v._v(" "),t("hr"),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("code",[v._v("HTTPS")]),v._v("协议的主要功能基本都依赖于"),t("code",[v._v("TLS/SSL")]),v._v("协议，"),t("code",[v._v("TLS/SSL")]),v._v("的功能实现主要依赖于三类基本算法："),t("code",[v._v("散列函数 Hash")]),v._v("、"),t("code",[v._v("对称加密")]),v._v("和"),t("code",[v._v("非对称加密")]),v._v("。")]),v._v(" "),t("p",[t("strong",[v._v("其利用非对称加密实现身份认证和密钥协商，对称加密算法采用协商的密钥对数据加密，基于散列函数验证信息的完整性。")])])]),t("p",[t("img",{attrs:{src:"/images/base-js54.png",alt:"TLS/SSL 工作原理"}})]),v._v(" "),t("p",[t("strong",[v._v("散列函数 Hash")])]),v._v(" "),t("p",[v._v("常见的有 "),t("code",[v._v("MD5")]),v._v("、"),t("code",[v._v("SHA1")]),v._v("、"),t("code",[v._v("SHA256")]),v._v("，该类函数特点是函数单向不可逆、对输入非常敏感、输出长度固定，针对数据的任何修改都会改变散列函数的结果，用于防止信息篡改并验证数据的完整性;")]),v._v(" "),t("p",[v._v("在信息传输过程中，散列函数不能单独实现信息防篡改，因为明文传输，中间人可以修改信息之后重新计算信息摘要，因此需要对传输的信息以及信息摘要进行加密;")]),v._v(" "),t("p",[t("strong",[v._v("对称加密")])]),v._v(" "),t("p",[v._v("常见的有"),t("code",[v._v("AES-CBC")]),v._v("、"),t("code",[v._v("DES")]),v._v("、"),t("code",[v._v("3DES")]),v._v("、"),t("code",[v._v("AES-GCM")]),v._v("等，相同的密钥可以用于信息的加密和解密，掌握密钥才能获取信息，能够防止信息窃听，通信方式是 1 对 1;")]),v._v(" "),t("p",[v._v("对称加密的优势是信息传输 1 对 1，需要共享相同的密码，密码的安全是保证信息安全的基础，服务器和 N 个客户端通信，需要维持 N 个密码记录，且缺少修改密码的机制;")]),v._v(" "),t("p",[t("strong",[v._v("非对称加密")])]),v._v(" "),t("p",[v._v("即常见的 "),t("code",[v._v("RSA")]),v._v(" 算法，还包括 "),t("code",[v._v("ECC")]),v._v("、"),t("code",[v._v("DH")]),v._v(" 等算法，算法特点是，密钥成对出现，一般称为公钥(公开)和私钥(保密)，公钥加密的信息只能私钥解开，私钥加密的信息只能公钥解开。因此掌握公钥的不同客户端之间不能互相解密信息，只能和掌握私钥的服务器进行加密通信，服务器可以实现 1 对多的通信，客户端也可以用来验证掌握私钥的服务器身份。")]),v._v(" "),t("p",[v._v("非对称加密的特点是信息传输 1 对多，服务器只需要维持一个私钥就能够和多个客户端进行加密通信，但服务器发出的信息能够被所有的客户端解密，且该算法的计算复杂，加密速度慢。")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("strong",[v._v("结合三类算法的特点，"),t("code",[v._v("TLS")]),v._v("的基本工作方式是:")])]),v._v(" "),t("p",[v._v("客户端使用非对称加密与服务器进行通信，实现身份验证并协商对称加密使用的密钥，然后对称加密算法采用协商密钥对信息以及信息摘要进行加密通信，不同的节点之间采用的对称密钥不同，从而可以保证信息只能通信双方获取。")])]),t("h2",{attrs:{id:"pki-体系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pki-体系"}},[v._v("#")]),v._v(" PKI 体系")]),v._v(" "),t("hr"),v._v(" "),t("h3",{attrs:{id:"rsa-身份验证的隐患"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rsa-身份验证的隐患"}},[v._v("#")]),v._v(" RSA 身份验证的隐患")]),v._v(" "),t("p",[v._v("身份验证和密钥协商是"),t("code",[v._v("TLS")]),v._v("的基础功能，要求的前提是合法的服务器掌握着对应的私钥。但 "),t("code",[v._v("RSA")]),v._v(" 算法无法确保服务器身份的合法性，因为公钥并不包含服务器的信息，存在安全隐患:")]),v._v(" "),t("ul",[t("li",[v._v("客户端 C 和服务器 S 进行通信，中间节点 M 截获了二者的通信;")]),v._v(" "),t("li",[v._v("节点 M 自己计算产生一对公钥 pub_M 和私钥 pri_M;")]),v._v(" "),t("li",[v._v("C 向 S 请求公钥时，M 把自己的公钥 pub_M 发给了 C;")]),v._v(" "),t("li",[v._v('C 使用公钥 pub_M 加密的数据能够被 M 解密，因为 M 掌握对应的私钥 pri_M，而 C 无法根据公钥信息判断服务器的身份，从而 C 和 * M 之间建立了"可信"加密连接;')]),v._v(" "),t("li",[v._v("中间节点 M 和服务器 S 之间再建立合法的连接，因此 C 和 S 之间通信被 M 完全掌握，M 可以进行信息的窃听、篡改等操作。")]),v._v(" "),t("li",[v._v("另外，服务器也可以对自己的发出的信息进行否认，不承认相关信息是自己发出。")])]),v._v(" "),t("p",[v._v("因此该方案下至少存在两类问题："),t("code",[v._v("中间人攻击")]),v._v("和"),t("code",[v._v("信息抵赖")]),v._v("。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js55.png",alt:"攻击方式"}})]),v._v(" "),t("h3",{attrs:{id:"身份验证-ca-和证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#身份验证-ca-和证书"}},[v._v("#")]),v._v(" 身份验证 CA 和证书")]),v._v(" "),t("p",[v._v("解决上述身份验证问题的关键是确保获取的公钥途径是合法的，能够验证服务器的身份信息，为此需要引入权威的第三方机构 CA(如沃通 CA)。")]),v._v(" "),t("p",[t("code",[v._v("CA")]),v._v('负责核实公钥的拥有者的信息，并颁发认证"证书"，同时能够为使用者提供证书验证服务，即'),t("code",[v._v("PKI")]),v._v("体系("),t("code",[v._v("PKI")]),v._v(" 基础知识)。")]),v._v(" "),t("p",[v._v("基本的原理为，"),t("code",[v._v("CA")]),v._v(' 负责审核信息，然后对关键信息利用私钥进行"签名"，公开对应的公钥，客户端可以利用公钥验证签名。'),t("code",[v._v("CA")]),v._v(" 也可以吊销已经签发的证书，基本的方式包括两类 "),t("code",[v._v("CRL")]),v._v(" 文件和 "),t("code",[v._v("OCSP")]),v._v("。"),t("code",[v._v("CA")]),v._v(" 使用具体的流程如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js56.png",alt:"身份验证 CA 和证书"}})]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("ol",[t("li",[t("p",[v._v("服务方 S 向第三方机构 CA 提交公钥、组织信息、个人信息(域名)等信息并申请认证;")])]),v._v(" "),t("li",[t("p",[v._v("CA 通过线上、线下等多种手段验证申请者提供信息的真实性，如组织是否存在、企业是否合法，是否拥有域名的所有权等;")])]),v._v(" "),t("li",[t("p",[v._v("如信息审核通过，CA 会向申请者签发认证文件-证书。")]),v._v(" "),t("p",[v._v("证书包含以下信息："),t("code",[v._v("申请者公钥")]),v._v("、"),t("code",[v._v("申请者的组织信息和个人信息")]),v._v("、"),t("code",[v._v("签发机构CA的信息")]),v._v("、"),t("code",[v._v("有效时间")]),v._v("、"),t("code",[v._v("证书序列号等信息的明文")]),v._v("，同时包含一个签名;")]),v._v(" "),t("p",[v._v("签名的产生算法：首先，使用散列函数计算公开的明文信息的信息摘要，然后，采用 CA 的私钥对信息摘要进行加密，密文即签名;")])]),v._v(" "),t("li",[t("p",[v._v("客户端 C 向服务器 S 发出请求时，S 返回证书文件;")])]),v._v(" "),t("li",[t("p",[v._v("客户端 C 读取证书中的相关的明文信息，采用相同的散列函数计算得到信息摘要，然后，利用对应 CA 的公钥解密签名数据，对比证书的信息摘要，如果一致，则可以确认证书的合法性，即公钥合法;")])]),v._v(" "),t("li",[t("p",[v._v("客户端然后验证证书相关的域名信息、有效时间等信息;")])]),v._v(" "),t("li",[t("p",[v._v("客户端会内置信任 CA 的证书信息(包含公钥)，如果 CA 不被信任，则找不到对应 CA 的证书，证书也会被判定非法。")])])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"title"},[v._v("WARNING")]),t("p",[v._v("在这个过程注意几点：")]),v._v(" "),t("p",[v._v("1.申请证书不需要提供私钥，确保私钥永远只能服务器掌握;")]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[v._v("证书的合法性仍然依赖于非对称加密算法，证书主要是增加了服务器信息以及签名;")])]),v._v(" "),t("li",[t("p",[v._v('内置 CA 对应的证书称为根证书，颁发者和使用者相同，自己为自己签名，即自签名证书（为什么说"部署自签 SSL 证书非常不安全"）')])]),v._v(" "),t("li",[t("p",[v._v("证书=公钥+申请者与颁发者信息+签名;")])])])]),t("h3",{attrs:{id:"证书链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#证书链"}},[v._v("#")]),v._v(" 证书链")]),v._v(" "),t("p",[v._v("如 "),t("code",[v._v("CA")]),v._v(" 根证书和服务器证书中间增加一级证书机构，即"),t("code",[v._v("中间证书")]),v._v("，证书的产生和验证原理不变，只是增加一层验证，只要最后能够被任何信任的 CA 根证书验证合法即可。")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("服务器证书 "),t("code",[v._v("server.pem")]),v._v(" 的签发者为中间证书机构 "),t("code",[v._v("inter")]),v._v("，"),t("code",[v._v("inter")]),v._v(" 根据证书 "),t("code",[v._v("inter.pem")]),v._v(" 验证 "),t("code",[v._v("server.pem")]),v._v(" 确实为自己签发的有效证书;")])]),v._v(" "),t("li",[t("p",[v._v("中间证书 "),t("code",[v._v("inter.pem")]),v._v(" 的签发 CA 为 "),t("code",[v._v("root")]),v._v("，"),t("code",[v._v("root")]),v._v(" 根据证书 "),t("code",[v._v("root.pem")]),v._v(" 验证 "),t("code",[v._v("inter.pem")]),v._v(" 为自己签发的合法证书;")])]),v._v(" "),t("li",[t("p",[v._v("客户端内置信任 CA 的 "),t("code",[v._v("root.pem")]),v._v(" 证书，因此服务器证书 "),t("code",[v._v("server.pem")]),v._v(" 的被信任。")])])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js57.png",alt:"证书链"}})]),v._v(" "),t("p",[v._v("服务器证书、中间证书与根证书在一起组合成一条合法的证书链，证书链的验证是自下而上的信任传递的过程。")]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[t("strong",[v._v("二级证书结构存在的优势：")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("减少根证书结构的管理工作量，可以更高效的进行证书的审核与签发;")])]),v._v(" "),t("li",[t("p",[v._v("根证书一般内置在客户端中，私钥一般离线存储，一旦私钥泄露，则吊销过程非常困难，无法及时补救;")])]),v._v(" "),t("li",[t("p",[v._v("中间证书结构的私钥泄露，则可以快速在线吊销，并重新为用户签发新的证书;")])]),v._v(" "),t("li",[t("p",[v._v("证书链四级以内一般不会对 "),t("code",[v._v("HTTPS")]),v._v(" 的性能造成明显影响。")])])])]),t("p",[t("img",{attrs:{src:"/images/base-js58.png",alt:"证书链2"}})]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("证书链有以下特点：")]),v._v(" "),t("p",[v._v("同一本服务器证书可能存在多条合法的证书链。")]),v._v(" "),t("p",[v._v("因为证书的生成和验证基础是公钥和私钥对，如果采用相同的公钥和私钥生成不同的中间证书，针对被签发者而言，该签发机构都是合法的 CA，不同的是中间证书的签发机构不同;")]),v._v(" "),t("p",[v._v("不同证书链的层级不一定相同，可能二级、三级或四级证书链。")]),v._v(" "),t("p",[v._v("中间证书的签发机构可能是根证书机构也可能是另一个中间证书机构，所以证书链层级不一定相同。")])]),t("h3",{attrs:{id:"证书吊销"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#证书吊销"}},[v._v("#")]),v._v(" 证书吊销")]),v._v(" "),t("p",[v._v("CA 机构能够签发证书，同样也存在机制宣布以往签发的证书无效。证书使用者不合法，CA 需要废弃该证书;或者私钥丢失，使用者申请让证书无效。主要存在两类机制："),t("code",[v._v("CRL")]),v._v(" 与 "),t("code",[v._v("OCSP")]),v._v("。")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("CRL(Certificate Revocation List)")]),v._v("证书吊销列表")])]),v._v(" "),t("p",[v._v("一个单独的文件。该文件包含了 CA 已经吊销的证书序列号(唯一)与吊销日期，同时该文件包含生效日期并通知下次更新该文件的时间，当然该文件必然包含 CA 私钥的签名以验证文件的合法性。")]),v._v(" "),t("p",[v._v("证书中一般会包含一个 "),t("code",[v._v("URL")]),v._v(" 地址 "),t("code",[v._v("CRL Distribution Point")]),v._v("，通知使用者去哪里下载对应的 "),t("code",[v._v("CRL")]),v._v(" 以校验证书是否吊销。")]),v._v(" "),t("p",[v._v("该吊销方式的优点是不需要频繁更新，但是不能及时吊销证书，因为 "),t("code",[v._v("CRL")]),v._v(" 更新时间一般是几天，这期间可能已经造成了极大损失。")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("OCSP(Online Certificate Status Protocol)")]),v._v("证书状态在线查询协议")])]),v._v(" "),t("p",[v._v("一个实时查询证书是否吊销的方式。请求者发送证书的信息并请求查询，服务器返回正常、吊销或未知中的任何一个状态。证书中一般也会包含一个 "),t("code",[v._v("OCSP")]),v._v(" 的 "),t("code",[v._v("URL")]),v._v(" 地址，要求查询服务器具有良好的性能。")]),v._v(" "),t("p",[v._v("部分 CA 或大部分的自签 CA (根证书)都是未提供 "),t("code",[v._v("CRL")]),v._v(" 或 "),t("code",[v._v("OCSP")]),v._v(" 地址的，对于吊销证书会是一件非常麻烦的事情。")]),v._v(" "),t("h2",{attrs:{id:"https-性能与优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https-性能与优化"}},[v._v("#")]),v._v(" HTTPS 性能与优化")]),v._v(" "),t("hr"),v._v(" "),t("h3",{attrs:{id:"https-性能损耗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https-性能损耗"}},[v._v("#")]),v._v(" HTTPS 性能损耗")]),v._v(" "),t("p",[v._v("前文讨论了 "),t("code",[v._v("HTTPS")]),v._v(" 原理与优势："),t("code",[v._v("身份验证")]),v._v("、"),t("code",[v._v("信息加密")]),v._v("与"),t("code",[v._v("完整性校验")]),v._v("等，且未对"),t("code",[v._v("TCP")]),v._v("和"),t("code",[v._v("HTTP协议")]),v._v("做任何修改。但通过增加新协议以实现更安全的通信必然需要付出代价，"),t("code",[v._v("HTTPS")]),v._v(" 协议的性能损耗主要体现如下：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("增加延时\n分析前面的握手过程，一次完整的握手至少需要两端依次来回两次通信，至少增加延时2* RTT，利用会话缓存从而复用连接，延时也至少1* RTT*")])]),v._v(" "),t("li",[t("p",[v._v("消耗较多的 "),t("code",[v._v("CPU")]),v._v(" 资源\n除数据传输之外，"),t("code",[v._v("HTTPS")]),v._v(" 通信主要包括对对称加解密、非对称加解密(服务器主要采用私钥解密数据);")])])]),v._v(" "),t("p",[v._v("压测 "),t("code",[v._v("TS8")]),v._v(" 机型的单核 "),t("code",[v._v("CPU")]),v._v("：对称加密算法"),t("code",[v._v("AES-CBC-256")]),v._v(" 吞吐量 "),t("code",[v._v("600Mbps")]),v._v("，非对称 "),t("code",[v._v("RSA")]),v._v(" 私钥解密"),t("code",[v._v("200次/s")]),v._v("。")]),v._v(" "),t("p",[v._v("不考虑其它软件层面的开销，"),t("code",[v._v("10G")]),v._v(" 网卡为对称加密需要消耗 "),t("code",[v._v("CPU")]),v._v(" 约 "),t("code",[v._v("17")]),v._v(" 核，"),t("code",[v._v("24")]),v._v(" 核 "),t("code",[v._v("CPU")]),v._v(" 最多接入 "),t("code",[v._v("HTTPS")]),v._v(" 连接 "),t("code",[v._v("4800")]),v._v(";")]),v._v(" "),t("p",[v._v("静态节点当前"),t("code",[v._v("10G")]),v._v(" 网卡的 "),t("code",[v._v("TS8")]),v._v(" 机型的 "),t("code",[v._v("HTTP")]),v._v("单机接入能力约为"),t("code",[v._v("10w/s")]),v._v("，如果将所有的"),t("code",[v._v("HTTP")]),v._v("连接变为"),t("code",[v._v("HTTPS")]),v._v("连接，则明显"),t("code",[v._v("RSA")]),v._v("的解密最先成为瓶颈。因此，"),t("code",[v._v("RSA")]),v._v("的解密能力是当前困扰"),t("code",[v._v("HTTPS")]),v._v("接入的主要难题。")]),v._v(" "),t("h3",{attrs:{id:"https-接入优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https-接入优化"}},[v._v("#")]),v._v(" HTTPS 接入优化")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[t("code",[v._v("CDN")]),v._v(" 接入")]),v._v(" "),t("code",[v._v("HTTPS")]),v._v(" 增加的延时主要是传输延时 "),t("code",[v._v("RTT")]),v._v("，"),t("code",[v._v("RTT")]),v._v(" 的特点是节点越近延时越小，"),t("code",[v._v("CDN")]),v._v(" 天然离用户最近，因此选择使用 "),t("code",[v._v("CDN")]),v._v(" 作为 "),t("code",[v._v("HTTPS")]),v._v(" 接入的入口，将能够极大减少接入延时。"),t("code",[v._v("CDN")]),v._v("节点通过和业务服务器维持长连接、会话复用和链路质量优化等可控方法，极大减少 "),t("code",[v._v("HTTPS")]),v._v(" 带来的延时。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("会话缓存")]),v._v("\n虽然前文提到 "),t("code",[v._v("HTTPS")]),v._v(" 即使采用会话缓存也要至少"),t("code",[v._v("1*RTT")]),v._v("的延时，但是至少延时已经减少为原来的一半，明显的延时优化;")])])]),v._v(" "),t("p",[v._v("同时，基于会话缓存建立的 "),t("code",[v._v("HTTPS")]),v._v(" 连接不需要服务器使用"),t("code",[v._v("RSA")]),v._v("私钥解密获取 "),t("code",[v._v("Pre-master")]),v._v(" 信息，可以省去 "),t("code",[v._v("CPU")]),v._v(" 的消耗。")]),v._v(" "),t("p",[v._v("如果业务访问连接集中，缓存命中率高，则"),t("code",[v._v("HTTPS")]),v._v("的接入能力将明显提升。当前TRP平台的缓存命中率高峰时期大于 30%，10k/s 的接入资源实际可以承载 13k/的接入，收效非常可观。")]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("硬件加速")]),v._v("\n为接入服务器安装专用的"),t("code",[v._v("SSL")]),v._v("硬件加速卡，作用类似 "),t("code",[v._v("GPU")]),v._v("，释放 "),t("code",[v._v("CPU")]),v._v("，能够具有更高的 "),t("code",[v._v("HTTPS")]),v._v(" 接入能力且不影响业务程序的。测试某硬件加速卡单卡可以提供 "),t("code",[v._v("35k")]),v._v(" 的解密能力，相当于 175 核 "),t("code",[v._v("CPU")]),v._v("，至少相当于 7 台 24 核的服务器，考虑到接入服务器其它程序的开销，一张硬件卡可以实现接近 10 台服务器的接入能力。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("远程解密")]),v._v("\n本地接入消耗过多的 "),t("code",[v._v("CPU")]),v._v(" 资源，浪费了网卡和硬盘等资源，考虑将最消耗 "),t("code",[v._v("CPU")]),v._v(" 资源的"),t("code",[v._v("RSA解密")]),v._v("计算任务转移到其它服务器，如此则可以充分发挥服务器的接入能力，充分利用带宽与网卡资源。远程解密服务器可以选择 "),t("code",[v._v("CPU")]),v._v(" 负载较低的机器充当，实现机器资源复用，也可以是专门优化的高计算性能的服务器。当前也是 "),t("code",[v._v("CDN")]),v._v(" 用于大规模"),t("code",[v._v("HTTPS")]),v._v("接入的解决方案之一。")])]),v._v(" "),t("li",[t("p",[t("strong",[t("code",[v._v("SPDY/HTTP2")])]),v._v("\n前面的方法分别从减少传输延时和单机负载的方法提高 "),t("code",[v._v("HTTPS")]),v._v(" 接入性能，但是方法都基于不改变 "),t("code",[v._v("HTTP")]),v._v(" 协议的基础上提出的优化方法，"),t("code",[v._v("SPDY/HTTP2")]),v._v(" 利用 "),t("code",[v._v("TLS/SSL")]),v._v(" 带来的优势，通过修改协议的方法来提升 "),t("code",[v._v("HTTPS")]),v._v(" 的性能，提高下载速度等。")])]),v._v(" "),t("li",[t("p",[v._v("使用 "),t("code",[v._v("DNS")])])]),v._v(" "),t("li",[t("p",[v._v("使用 "),t("code",[v._v("http2")])])]),v._v(" "),t("li",[t("p",[v._v("使用缓存")])])]),v._v(" "),t("h2",{attrs:{id:"从用户输入-url-到浏览器呈现页面发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从用户输入-url-到浏览器呈现页面发生了什么"}},[v._v("#")]),v._v(" 从用户输入 URL 到浏览器呈现页面发生了什么?")]),v._v(" "),t("h3",{attrs:{id:"浏览器架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构"}},[v._v("#")]),v._v(" 浏览器架构")]),v._v(" "),t("p",[v._v("在讲浏览器架构之前，先理解两个概念，"),t("code",[v._v("进程")]),v._v("和"),t("code",[v._v("线程")]),v._v("。")]),v._v(" "),t("ul",[t("li",[t("p",[t("code",[v._v("进程(process)")]),v._v("是程序的一次执行过程,是一个动态概念,是程序在执行过程中分配和管理资源的基本单位。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("线程(thread)")]),v._v("是 "),t("code",[v._v("CPU")]),v._v(" 调度和分配的基本单位,它可以与同属于一个进程的其他线程共享该进程所拥有的全部资源。")])])]),v._v(" "),t("p",[v._v("浏览器属于一个应用程序,而应用程序的一次执行，可以理解为计算机启动了一个进程,进程启动后,"),t("code",[v._v("CPU")]),v._v(" 会给该进程分配相应的内存空间,当我们的进程得到了内存之后,就可以使用线程进行资源的调度,进而完成我们应用程序的功能。")]),v._v(" "),t("p",[v._v("而在应用程序中，为了满足功能的需要，启动的进程会创建另外的进程来处理其他任务，这些创建出来的新的进程拥有全新的独立的内存空间，不与原来的进程共享内存，如果这些进程之间需要通信,需要通过"),t("code",[v._v("IPC机制(Inter Process Communication)")]),v._v("进行。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js59.png",alt:"应用程序"}})]),v._v(" "),t("p",[v._v("很多应用程序都会采取这种多进程的方式来工作，因为进程和进程之间是互相独立的它们互不影响，也就是说，当其中一个进程挂掉了之后，不会影响到其他进程的执行，只需要重启挂掉的进程就可以恢复运行。")]),v._v(" "),t("h3",{attrs:{id:"浏览器的多进程架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的多进程架构"}},[v._v("#")]),v._v(" 浏览器的多进程架构")]),v._v(" "),t("p",[v._v("假如我们去开发一个浏览器，它的架构可以是一个单进程多线程的应用程序，也可以是一个使用 IPC 通信的多进程应用程序。")]),v._v(" "),t("p",[v._v("不同的浏览器使用不同的架构，这里我们以 Chrome 为例，介绍浏览器的多进程架构。")]),v._v(" "),t("p",[v._v("在 Chrome 中，主要的进程有 4 个：")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("浏览器进程 ("),t("code",[v._v("Browser Process")]),v._v(")：")]),v._v(" 负责浏览器的 TAB 的前进、后退、地址栏、书签栏的工作和处理浏览器的一些不可见的底层操作，比如网络请求和文件访问。")]),v._v(" "),t("li",[t("strong",[v._v("渲染进程 ("),t("code",[v._v("Renderer Process")]),v._v(")：")]),v._v(" 负责一个 Tab 内的显示相关的工作，也称渲染引擎。")]),v._v(" "),t("li",[t("strong",[v._v("插件进程 ("),t("code",[v._v("Plugin Process")]),v._v(")：")]),v._v(" 负责控制网页使用到的插件")]),v._v(" "),t("li",[t("strong",[v._v("GPU 进程 ("),t("code",[v._v("GPU Process")]),v._v(")：")]),v._v(" 负责处理整个应用程序的 GPU 任务")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js60.png",alt:"渲染方式"}})]),v._v(" "),t("ol",[t("li",[t("p",[v._v("首先，当我们要浏览一个网页，我们会在浏览器的地址栏里输入 URL，这个时候"),t("code",[v._v("Browser Process")]),v._v("会向这个 URL 发送请求，获取这个 URL 的 "),t("code",[v._v("HTML")]),v._v(" 内容，然后将 "),t("code",[v._v("HTML")]),v._v(" 交给"),t("code",[v._v("Renderer Process")]),v._v("。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Renderer Process")]),v._v(" 解析 "),t("code",[v._v("HTML")]),v._v(" 内容，解析遇到需要请求网络的资源又返回来交给 "),t("code",[v._v("Browser Process")]),v._v(" 进行加载，同时通知 "),t("code",[v._v("Browser Process")]),v._v("，需要 "),t("code",[v._v("Plugin Process")]),v._v(" 加载插件资源，执行插件代码。")])]),v._v(" "),t("li",[t("p",[v._v("解析完成后，"),t("code",[v._v("Renderer Process")]),v._v(" 计算得到图像帧，并将这些图像帧交给 "),t("code",[v._v("GPU Process")]),v._v("，"),t("code",[v._v("GPU Process")]),v._v(" 将其转化为图像显示屏幕。")])])]),v._v(" "),t("h3",{attrs:{id:"多进程架构的好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多进程架构的好处"}},[v._v("#")]),v._v(" 多进程架构的好处")]),v._v(" "),t("p",[v._v("Chrome 为什么要使用多进程架构呢？")]),v._v(" "),t("ul",[t("li",[t("strong",[v._v("第一，更高的容错性")]),v._v("。当今 "),t("code",[v._v("WEB")]),v._v(" 应用中，"),t("code",[v._v("HTML")]),v._v("，"),t("code",[v._v("JavaScript")]),v._v(" 和 "),t("code",[v._v("CSS")]),v._v(" 日益复杂，这些跑在渲染引擎的代码，频繁的出现 "),t("code",[v._v("BUG")]),v._v("，而有些 "),t("code",[v._v("BUG")]),v._v(" 会直接导致渲染引擎崩溃，多进程架构使得每一个渲染引擎运行在各自的进程中，相互之间不受影响，也就是说，当其中一个页面崩溃挂掉之后，其他页面还可以正常的运行不收影响。")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js61.png",alt:"多进程架构"}})]),v._v(" "),t("ul",[t("li",[t("p",[t("strong",[v._v("第二，更高的安全性和沙盒性（sanboxing）")]),v._v("。渲染引擎会经常性的在网络上遇到不可信、甚至是恶意的代码，它们会利用这些漏洞在你的电脑上安装恶意的软件，针对这一问题，浏览器对不同进程限制了不同的权限，并为其提供沙盒运行环境，使其更安全更可靠。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("第三，更高的响应速度")]),v._v("。在单进程的架构中，各个任务相互竞争抢夺 CPU 资源，使得浏览器响应速度变慢，而多进程架构正好规避了这一缺点。")])])]),v._v(" "),t("h3",{attrs:{id:"多进程架构优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多进程架构优化"}},[v._v("#")]),v._v(" 多进程架构优化")]),v._v(" "),t("p",[v._v("之前的我们说到，"),t("code",[v._v("Renderer Process")]),v._v("的作用是负责一个 "),t("code",[v._v("Tab")]),v._v(" 内的显示相关的工作，这就意味着，一个 "),t("code",[v._v("Tab")]),v._v("，就会有一个 "),t("code",[v._v("Renderer Process")]),v._v("，这些进程之间的内存无法进行共享，而不同进程的内存常常需要包含相同的内容。")]),v._v(" "),t("h3",{attrs:{id:"浏览器的进程模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的进程模式"}},[v._v("#")]),v._v(" 浏览器的进程模式")]),v._v(" "),t("p",[v._v("为了节省内存，"),t("code",[v._v("Chrome")]),v._v(" 提供了四种进程模式（"),t("code",[v._v("Process Models")]),v._v("），不同的进程模式会对 "),t("code",[v._v("tab")]),v._v(" 进程做不同的处理。")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("Process-per-site-instance (default)")]),v._v(" - 同一个 "),t("code",[v._v("site-instance")]),v._v(" 使用一个进程")]),v._v(" "),t("li",[t("code",[v._v("Process-per-site")]),v._v(" - 同一个 "),t("code",[v._v("site")]),v._v(" 使用一个进程")]),v._v(" "),t("li",[t("code",[v._v("Process-per-tab")]),v._v(" - 每个 "),t("code",[v._v("tab")]),v._v(" 使用一个进程")]),v._v(" "),t("li",[t("code",[v._v("Single process")]),v._v(" - 所有 "),t("code",[v._v("tab")]),v._v(" 共用一个进程")])]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("ul",[t("li",[t("p",[t("strong",[v._v("site")]),v._v(" 指的是相同的 "),t("strong",[v._v("registered domain name")]),v._v("(如：google.com ，bbc.co.uk)和 scheme (如：https://)。比如 a.baidu.com 和 b.baidu.com 就可以理解为同一个 site（注意这里要和 Same-origin policy 区分开来，同源策略还涉及到子域名和端口）。")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("site-instance")]),v._v(" 指的是一组 "),t("strong",[v._v("connected pages from the same site")]),v._v("，这里 connected 的定义是 can obtain references to each other in script code 怎么理解这段话呢。满足下面两中情况并且打开的新页面和旧页面属于上面定义的同一个 site，就属于同一个 site-instance. - 用户通过"),t("code",[v._v('<a target="_blank">')]),v._v("这种方式点击打开的新页面 - JS 代码打开的新页面（比如 "),t("code",[v._v("window.open")]),v._v(")")])])])]),t("p",[t("strong",[v._v("理解了概念之后，下面解释四个进程模式:")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("首先是"),t("code",[v._v("Single process")]),v._v("，顾名思义，"),t("code",[v._v("单进程模式")]),v._v("，所有 "),t("code",[v._v("tab")]),v._v(" 都会使用同一个进程。接下来是"),t("code",[v._v("Process-per-tab")]),v._v(" ，也是顾名思义，每打开一个 "),t("code",[v._v("tab")]),v._v("，会新建一个进程。而对于"),t("code",[v._v("Process-per-site")]),v._v("，当你打开 a.baidu.com 页面，在打开 b.baidu.com 的页面，这两个页面的 tab 使用的是共一个进程，因为这两个页面的 "),t("code",[v._v("site")]),v._v(" 相同，而如此一来，如果其中一个 tab 崩溃了，而另一个 tab 也会崩溃。")])]),v._v(" "),t("li",[t("p",[t("code",[v._v("Process-per-site-instance")]),v._v(" 是最重要的，因为这个是 "),t("code",[v._v("Chrome")]),v._v(" 默认使用的模式，也就是几乎所有的用户都在用的模式。当你打开一个 tab 访问 a.baidu.com ，然后再打开一个 tab 访问 b.baidu.com，这两个 tab 会使用两个进程。而如果你在 a.baidu.com 中，通过 JS 代码打开了 b.baidu.com 页面，这两个 tab 会使用同一个进程。")])])]),v._v(" "),t("h3",{attrs:{id:"默认模式选择"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默认模式选择"}},[v._v("#")]),v._v(" 默认模式选择")]),v._v(" "),t("p",[t("strong",[v._v("那么为什么浏览器使用"),t("code",[v._v("Process-per-site-instance")]),v._v("作为默认的进程模式呢？")])]),v._v(" "),t("p",[t("code",[v._v("Process-per-site-instance")]),v._v("兼容了性能与易用性，是一个比较中庸通用的模式。")]),v._v(" "),t("ul",[t("li",[v._v("相较于 "),t("code",[v._v("Process-per-tab")]),v._v("，能够少开很多进程，就意味着更少的内存占用")]),v._v(" "),t("li",[v._v("相较于 "),t("code",[v._v("Process-per-site")]),v._v("，能够更好的隔离相同域名下毫无关联的 tab，更加安全")])]),v._v(" "),t("h3",{attrs:{id:"导航过程都发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导航过程都发生了什么"}},[v._v("#")]),v._v(" 导航过程都发生了什么")]),v._v(" "),t("p",[v._v("前面我们讲了浏览器的多进程架构，讲了多进程架构的各种好处，和 Chrome 是怎么优化多进程架构的，下面从用户浏览网页这一简单的场景，来深入了解进程和线程是如何呈现我们的网站页面的。")]),v._v(" "),t("h3",{attrs:{id:"网页加载过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网页加载过程"}},[v._v("#")]),v._v(" 网页加载过程")]),v._v(" "),t("p",[v._v("上面我们提到，tab 以外的大部分工作由浏览器进程"),t("code",[v._v("Browser Process")]),v._v("负责，针对工作的不同，"),t("code",[v._v("Browser Process")]),v._v(" 划分出不同的工作线程：")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("UI thread")]),v._v("：控制浏览器上的按钮及输入框；")]),v._v(" "),t("li",[t("code",[v._v("network thread")]),v._v("：处理网络请求，从网上获取数据；")]),v._v(" "),t("li",[t("code",[v._v("storage thread")]),v._v("：控制文件等的访问")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js62.png",alt:"网页加载过程"}})]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("处理输入")])])]),v._v(" "),t("p",[v._v("我们在浏览器的地址栏输入内容按下回车时，"),t("code",[v._v("UI thread")]),v._v(" 会判断输入的内容是搜索关键词（"),t("code",[v._v("search query")]),v._v("）还是 URL，如果是搜索关键词，跳转至默认搜索引擎对应都搜索 URL，如果输入的内容是 URL，则开始请求 URL。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js63.png",alt:"处理输入"}})]),v._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[v._v("开始导航")])])]),v._v(" "),t("p",[v._v("回车按下后，"),t("code",[v._v("UI thread")]),v._v(" 将关键词搜索对应的 URL 或输入的 URL 交给网络线程 "),t("code",[v._v("Network thread")]),v._v("，此时 UI 线程使 Tab 前的图标展示为加载中状态，然后网络进程进行一系列诸如 DNS 寻址，建立 TLS 连接等操作进行资源请求，如果收到服务器的 301 重定向响应，它就会告知 UI 线程进行重定向然后它会再次发起一个新的网络请求。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js64.png",alt:"开始导航"}})]),v._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[v._v("读取响应")])])]),v._v(" "),t("p",[t("code",[v._v("network thread")]),v._v("接收到服务器的响应后，开始解析 HTTP 响应报文，然后根据响应头中的"),t("code",[v._v("Content-Type")]),v._v("字段来确定响应主体的媒体类型（"),t("code",[v._v("MIME Type")]),v._v("），如果媒体类型是一个 HTML 文件，则将响应数据交给渲染进程（"),t("code",[v._v("renderer process")]),v._v("）来进行下一步的工作，如果是 zip 文件或者其它文件，会把相关数据传输给下载管理器。")]),v._v(" "),t("p",[v._v("与此同时，浏览器会进行 "),t("code",[v._v("Safe Browsing")]),v._v(" 安全检查，如果域名或者请求内容匹配到已知的恶意站点，"),t("code",[v._v("network thread")]),v._v(" 会展示一个警告页。除此之外，网络线程还会做 "),t("code",[v._v("CORB（Cross Origin Read Blocking）")]),v._v("检查来确定那些敏感的跨站数据不会被发送至渲染进程。")]),v._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[v._v("查找渲染进程")])])]),v._v(" "),t("p",[v._v("各种检查完毕以后，"),t("code",[v._v("network thread")]),v._v(" 确信浏览器可以导航到请求网页，"),t("code",[v._v("network thread")]),v._v(" 会通知 "),t("code",[v._v("UI thread")]),v._v(" 数据已经准备好，"),t("code",[v._v("UI thread")]),v._v(" 会查找到一个 "),t("code",[v._v("renderer process")]),v._v(" 进行网页的渲染。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js65.png",alt:"读取响应"}})]),v._v(" "),t("p",[v._v("浏览器为了对查找渲染进程这一步骤进行优化，考虑到网络请求获取响应需要时间，所以在第二步开始，浏览器已经预先查找和启动了一个渲染进程，如果中间步骤一切顺利，当 "),t("code",[v._v("network thread")]),v._v(" 接收到数据时，渲染进程已经准备好了，但是如果遇到重定向，这个准备好的渲染进程也许就不可用了，这个时候会重新启动一个渲染进程。")]),v._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("strong",[v._v("提交导航")])])]),v._v(" "),t("p",[v._v("到了这一步，数据和渲染进程都准备好了，"),t("code",[v._v("Browser Process")]),v._v(" 会向 "),t("code",[v._v("Renderer Process")]),v._v(" 发送 IPC 消息来确认导航，此时，浏览器进程将准备好的数据发送给渲染进程，渲染进程接收到数据之后，又发送 IPC 消息给浏览器进程，告诉浏览器进程导航已经提交了，页面开始加载。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js66.png",alt:"读取响应"}})]),v._v(" "),t("p",[v._v("这个时候导航栏会更新，安全指示符更新（地址前面的小锁），访问历史列表（"),t("code",[v._v("history tab")]),v._v("）更新，即可以通过前进后退来切换该页面。")]),v._v(" "),t("ol",{attrs:{start:"6"}},[t("li",[t("strong",[v._v("初始化加载完成")])])]),v._v(" "),t("p",[v._v("当导航提交完成后，渲染进程开始加载资源及渲染页面（详细内容下文介绍），当页面渲染完成后（页面及内部的 "),t("code",[v._v("iframe")]),v._v(" 都触发了 "),t("code",[v._v("onload")]),v._v(" 事件），会向浏览器进程发送 IPC 消息，告知浏览器进程，这个时候 "),t("code",[v._v("UI thread")]),v._v(" 会停止展示 tab 中的加载中图标。")]),v._v(" "),t("h3",{attrs:{id:"网页渲染原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网页渲染原理"}},[v._v("#")]),v._v(" 网页渲染原理")]),v._v(" "),t("p",[v._v("导航过程完成之后，浏览器进程把数据交给了渲染进程，渲染进程负责 tab 内的所有事情，核心目的就是将 "),t("code",[v._v("HTML/CSS/JS")]),v._v(" 代码，转化为用户可进行交互的 "),t("code",[v._v("web")]),v._v(" 页面。那么渲染进程是如何工作的呢？")]),v._v(" "),t("p",[t("strong",[v._v("渲染进程中，包含线程分别是：")])]),v._v(" "),t("ul",[t("li",[v._v("一个主线程（"),t("code",[v._v("main thread")]),v._v("）")]),v._v(" "),t("li",[v._v("多个工作线程（"),t("code",[v._v("work thread")]),v._v("）")]),v._v(" "),t("li",[v._v("一个合成器线程（"),t("code",[v._v("compositor thread")]),v._v("）")]),v._v(" "),t("li",[v._v("多个光栅化线程（"),t("code",[v._v("raster thread")]),v._v("）")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js67.png",alt:"网页渲染原理"}})]),v._v(" "),t("p",[v._v("不同的线程，有着不同的工作职责。")]),v._v(" "),t("p",[v._v("="),t("strong",[v._v("构建 DOM")])]),v._v(" "),t("p",[v._v("当渲染进程接受到导航的确认信息后，开始接受来自浏览器进程的数据，这个时候，主线程会解析数据转化为 DOM（"),t("code",[v._v("Document Object Model")]),v._v("）对象。")]),v._v(" "),t("p",[t("strong",[v._v("DOM 为 Web 开发人员通过 JavaScript 与网页进行交互的数据结构及 API。")])]),v._v(" "),t("p",[v._v("="),t("strong",[v._v("资源子加载")])]),v._v(" "),t("p",[v._v("在构建 DOM 的过程中，会解析到图片、CSS、JavaScript 脚本等资源，这些资源是需要从网络或者缓存中获取的，主线程在构建 DOM 过程中如果遇到了这些资源，逐一发起请求去获取，而为了提升效率，浏览器也会运行预加载扫描（"),t("code",[v._v("preload scanner")]),v._v("）程序，如果如果 HTML 中存在 img、link 等标签，预加载扫描程序会把这些请求传递给"),t("code",[v._v("Browser Process")]),v._v("的 "),t("code",[v._v("network thread")]),v._v(" 进行资源下载。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js68.png",alt:"资源子加载"}})]),v._v(" "),t("p",[t("strong",[v._v("JavaScript 的下载与执行")])]),v._v(" "),t("p",[v._v("构建 DOM 过程中，如果遇到"),t("code",[v._v("<script>")]),v._v("标签，渲染引擎会停止对 HTML 的解析，而去加载执行 JS 代码，原因在于 JS 代码可能会改变 DOM 的结构（比如执行"),t("code",[v._v("document.write()")]),v._v("等 API）。")]),v._v(" "),t("p",[v._v("不过开发者其实也有多种方式来告知浏览器应对如何应对某个资源，比如说如果在"),t("code",[v._v("<script>")]),v._v("标签上添加了 "),t("code",[v._v("async")]),v._v(" 或 "),t("code",[v._v("defer")]),v._v(" 等属性，浏览器会异步的加载和执行 JS 代码，而不会阻塞渲染")]),v._v(" "),t("p",[t("strong",[v._v("样式计算 - Style calculation")])]),v._v(" "),t("p",[v._v("DOM 树只是我们页面的结构，我们要知道页面长什么样子，我们还需要知道 DOM 的每一个节点的样式。主线程在解析页面时，遇到"),t("code",[v._v("<style>")]),v._v("标签或者"),t("code",[v._v("<link>")]),v._v("标签的 CSS 资源，会加载 CSS 代码，根据 CSS 代码确定每个 DOM 节点的计算样式（"),t("code",[v._v("computed style")]),v._v("）。")]),v._v(" "),t("p",[v._v("计算样式是主线程根据 CSS 样式选择器（"),t("code",[v._v("CSS selectors")]),v._v("）计算出的每个 DOM 元素应该具备的具体样式，即使你的页面没有设置任何自定义的样式，浏览器也会提供其默认的样式。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js69.png",alt:"样式计算"}})]),v._v(" "),t("p",[t("strong",[v._v("布局 - Layout")])]),v._v(" "),t("p",[v._v("DOM 树和计算样式完成后，我们还需要知道每一个节点在页面上的位置，布局（"),t("code",[v._v("Layout")]),v._v("）其实就是找到所有元素的几何关系的过程。")]),v._v(" "),t("p",[v._v("主线程会遍历 DOM 及相关元素的计算样式，构建出包含每个元素的页面坐标信息及盒子模型大小的布局树（"),t("code",[v._v("Render Tree")]),v._v("），遍历过程中，会跳过隐藏的元素（"),t("code",[v._v("display: none")]),v._v("），另外，伪元素虽然在 DOM 上不可见，但是在布局树上是可见的。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js70.png",alt:"布局"}})]),v._v(" "),t("p",[t("strong",[v._v("绘制 - Paint")])]),v._v(" "),t("p",[v._v("布局 layout 之后，我们知道了不同元素的结构，样式，几何关系，我们要绘制出一个页面，我们要需要知道每个元素的绘制先后顺序，在绘制阶段，主线程会遍历布局树（"),t("code",[v._v("layout tree")]),v._v("），生成一系列的绘画记录（"),t("code",[v._v("paint records")]),v._v("）。绘画记录可以看做是记录各元素绘制先后顺序的笔记。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js71.png",alt:"绘制"}})]),v._v(" "),t("p",[t("strong",[v._v("合成 - Compositing")])]),v._v(" "),t("p",[v._v("文档结构、元素的样式、元素的几何关系、绘画顺序，这些信息我们都有了，这个时候如果要绘制一个页面，我们需要做的是把这些信息转化为显示器中的像素，这个转化的过程，叫做光栅化（"),t("code",[v._v("rasterizing")]),v._v("）。")]),v._v(" "),t("p",[v._v("那我们要绘制一个页面，最简单的做法是只光栅化视口内（viewport）的网页内容，如果用户进行了页面滚动，就移动光栅帧（"),t("code",[v._v("rastered frame")]),v._v("）并且光栅化更多的内容以补上页面缺失的部分，如下：")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js72.gif",alt:"合成"}})]),v._v(" "),t("p",[v._v("Chrome 第一个版本就是采用这种简单的绘制方式，这一方式唯一的缺点就是每当页面滚动，光栅线程都需要对新移进视图的内容进行光栅化，这是一定的性能损耗，为了优化这种情况，Chrome 采取一种更加复杂的叫做合成（"),t("code",[v._v("compositing")]),v._v("）的做法。")]),v._v(" "),t("p",[v._v("那么，什么是合成？合成是一种将页面分成若干层，然后分别对它们进行光栅化，最后在一个单独的线程 - 合成线程（"),t("code",[v._v("compositor thread")]),v._v("）里面合并成一个页面的技术。当用户滚动页面时，由于页面各个层都已经被光栅化了，浏览器需要做的只是合成一个新的帧来展示滚动后的效果罢了。页面的动画效果实现也是类似，将页面上的层进行移动并构建出一个新的帧即可。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js73.gif",alt:"合成2"}})]),v._v(" "),t("p",[v._v("为了实现合成技术，我们需要对元素进行分层，确定哪些元素需要放置在哪一层，主线程需要遍历渲染树来创建一棵层次树（"),t("code",[v._v("Layer Tree")]),v._v("），对于添加了 "),t("code",[v._v("will-change")]),v._v(" CSS 属性的元素，会被看做单独的一层，没有 "),t("code",[v._v("will-change")]),v._v(" CSS 属性的元素，浏览器会根据情况决定是否要把该元素放在单独的层。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js74.png",alt:"合成3"}})]),v._v(" "),t("p",[v._v("你可能会想要给页面上所有的元素一个单独的层，然而当页面的层超过一定的数量后，层的合成操作要比在每个帧中光栅化页面的一小部分还要慢，因此衡量你应用的渲染性能是十分重要的一件事情。")]),v._v(" "),t("p",[v._v("一旦 "),t("code",[v._v("Layer Tress")]),v._v(" 被创建，渲染顺序被确定，主线程会把这些信息通知给合成器线程，合成器线程开始对层次数的每一层进行光栅化。有的层的可以达到整个页面的大小，所以合成线程需要将它们切分为一块又一块的小图块（"),t("code",[v._v("tiles")]),v._v("），之后将这些小图块分别进行发送给一系列光栅线程（"),t("code",[v._v("raster threads")]),v._v("）进行光栅化，结束后光栅线程会将每个图块的光栅结果存在 "),t("code",[v._v("GPU Process")]),v._v(" 的内存中。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js75.png",alt:"合成4"}})]),v._v(" "),t("p",[v._v("为了优化显示体验，合成线程可以给不同的光栅线程赋予不同的优先级，将那些在视口中的或者视口附近的层先被光栅化。")]),v._v(" "),t("p",[v._v("当图层上面的图块都被栅格化后，合成线程会收集图块上面叫做绘画四边形（"),t("code",[v._v("draw quads")]),v._v("）的信息来构建一个合成帧（"),t("code",[v._v("compositor frame")]),v._v("）。")]),v._v(" "),t("ul",[t("li",[v._v("绘画四边形：包含图块在内存的位置以及图层合成后图块在页面的位置之类的信息。")]),v._v(" "),t("li",[v._v("合成帧：代表页面一个帧的内容的绘制四边形集合。")])]),v._v(" "),t("p",[v._v("以上所有步骤完成后，合成线程就会通过 IPC 向浏览器进程（"),t("code",[v._v("browser process")]),v._v("）提交（"),t("code",[v._v("commit")]),v._v("）一个渲染帧。这个时候可能有另外一个合成帧被浏览器进程的 UI 线程（"),t("code",[v._v("UI thread")]),v._v("）提交以改变浏览器的 UI。这些合成帧都会被发送给 GPU 从而展示在屏幕上。如果合成线程收到页面滚动的事件，合成线程会构建另外一个合成帧发送给 GPU 来更新页面。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js76.png",alt:"合成5"}})]),v._v(" "),t("p",[v._v("合成的好处在于这个过程没有涉及到主线程，所以合成线程不需要等待样式的计算以及 JavaScript 完成执行。这就是为什么合成器相关的动画最流畅，如果某个动画涉及到布局或者绘制的调整，就会涉及到主线程的重新计算，自然会慢很多。")]),v._v(" "),t("p",[t("strong",[v._v("浏览器对事件的处理")])]),v._v(" "),t("p",[v._v("当页面渲染完毕以后，TAB 内已经显示出了可交互的 WEB 页面，用户可以进行移动鼠标、点击页面等操作了，而当这些事件发生时候，浏览器是如何处理这些事件的呢？")]),v._v(" "),t("p",[v._v("以点击事件（"),t("code",[v._v("click event")]),v._v("）为例，让鼠标点击页面时候，首先接受到事件信息的是 "),t("code",[v._v("Browser Process")]),v._v("，但是"),t("code",[v._v("Browser Process")]),v._v("只知道事件发生的类型和发生的位置，具体怎么对这个点击事件进行处理，还是由 Tab 内的"),t("code",[v._v("Renderer Process")]),v._v("进行的。"),t("code",[v._v("Browser Process")]),v._v(" 接受到事件后，随后便把事件的信息传递给了渲染进程，渲染进程会找到根据事件发生的坐标，找到目标对象（"),t("code",[v._v("target")]),v._v("），并且运行这个目标对象的点击事件绑定的监听函数（"),t("code",[v._v("listener")]),v._v("）。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js77.png",alt:"浏览器对事件的处理"}})]),v._v(" "),t("p",[t("strong",[v._v("渲染进程中合成器线程接收事件")])]),v._v(" "),t("p",[v._v("前面我们说到，合成器线程可以独立于主线程之外通过已光栅化的层创建组合帧，例如页面滚动，如果没有对页面滚动绑定相关的事件，组合器线程可以独立于主线程创建组合帧，如果页面绑定了页面滚动事件，合成器线程会等待主线程进行事件处理后才会创建组合帧。那么，合成器线程是如何判断出这个事件是否需要路由给主线程处理的呢？")]),v._v(" "),t("p",[v._v("由于执行 JS 是主线程的工作，当页面合成时，合成器线程会标记页面中绑定有事件处理器的区域为非快速滚动区域("),t("code",[v._v("non-fast scrollable region")]),v._v(")，如果事件发生在这些存在标注的区域，合成器线程会把事件信息发送给主线程，等待主线程进行事件处理，如果事件不是发生在这些区域，合成器线程则会直接合成新的帧而不用等到主线程的响应。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js78.png",alt:"渲染进程中合成器线程接收事件"}})]),v._v(" "),t("p",[v._v("而对于非快速滚动区域的标记，开发者需要注意全局事件的绑定，比如我们使用事件委托，将目标元素的事件交给根元素 body 进行处理，代码如下：")]),v._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[v._v("document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("body"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("addEventListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"touchstart"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("event")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("target "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("===")]),v._v(" area"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("preventDefault")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br")])]),t("p",[v._v("在开发者角度看，这一段代码没什么问题，但是从浏览器角度看，这一段代码给 body 元素绑定了事件监听器，也就意味着整个页面都被编辑为一个非快速滚动区域，这会使得即使你的页面的某些区域没有绑定任何事件，每次用户触发事件时，合成器线程也需要和主线程通信并等待反馈，流畅的合成器独立处理合成帧的模式就失效了。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js79.png",alt:"渲染进程中合成器线程接收事件2"}})]),v._v(" "),t("p",[v._v("其实这种情况也很好处理，只需要在事件监听时传递 "),t("code",[v._v("passtive")]),v._v(" 参数为 "),t("code",[v._v("true")]),v._v("，"),t("code",[v._v("passtive")]),v._v(" 会告诉浏览器你既要绑定事件，又要让组合器线程直接跳过主线程的事件处理直接合成创建组合帧。")]),v._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[v._v("document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("body"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("addEventListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"touchstart"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[v._v("event")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=>")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("if")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),v._v("event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("target "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("===")]),v._v(" area"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n      event"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[v._v("preventDefault")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(",")]),v._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[v._v("passive")]),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v(":")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[v._v("true")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br")])]),t("p",[t("strong",[v._v("查找事件的目标对象（"),t("code",[v._v("event target")]),v._v("）")])]),v._v(" "),t("p",[v._v("当合成器线程接收到事件信息，判定到事件发生不在非快速滚动区域后，合成器线程会向主线程发送这个时间信息，主线程获取到事件信息的第一件事就是通过命中测试（"),t("code",[v._v("hit test")]),v._v("）去找到事件的目标对象。具体的命中测试流程是遍历在绘制阶段生成的绘画记录（"),t("code",[v._v("paint records")]),v._v("）来找到包含了事件发生坐标上的元素对象。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js80.png",alt:"查找事件的目标对象"}})]),v._v(" "),t("p",[t("strong",[v._v("浏览器对事件的优化")])]),v._v(" "),t("p",[v._v("一般我们屏幕的帧率是每秒 60 帧，也就是 "),t("code",[v._v("60fps")]),v._v("，但是某些事件触发的频率超过了这个数值，比如 "),t("code",[v._v("wheel")]),v._v("，"),t("code",[v._v("mousewheel")]),v._v("，"),t("code",[v._v("mousemove")]),v._v("，"),t("code",[v._v("pointermove")]),v._v("，"),t("code",[v._v("touchmove")]),v._v("，这些连续性的事件一般每秒会触发 "),t("code",[v._v("60~120")]),v._v(" 次，假如每一次触发事件都将事件发送到主线程处理，由于屏幕的刷新速率相对来说较低，这样使得主线程会触发过量的命中测试以及 JS 代码，使得性能有了没必要是损耗。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js81.png",alt:"浏览器对事件的优化"}})]),v._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("总结:")]),v._v(" "),t("p",[v._v("浏览器的多进程架构，根据不同的功能划分了不同的进程，进程内不同的使命划分了不同的线程。")]),v._v(" "),t("p",[v._v("用户开始浏览网页时候，浏览器进程进行"),t("code",[v._v("处理输入")]),v._v("、"),t("code",[v._v("开始导航请求数据")]),v._v("、"),t("code",[v._v("请求响应数据")]),v._v("，"),t("code",[v._v("查找新建渲染进程")]),v._v("，"),t("code",[v._v("提交导航")]),v._v("，之后渲染又进行了"),t("code",[v._v("解析 HTML")]),v._v(" "),t("code",[v._v("构建 DOM")]),v._v("、"),t("code",[v._v("构建过程加载子资源")]),v._v("、"),t("code",[v._v("下载并执行 JS 代码")]),v._v("、"),t("code",[v._v("样式计算")]),v._v("、"),t("code",[v._v("布局")]),v._v("、"),t("code",[v._v("绘制")]),v._v("、"),t("code",[v._v("合成")]),v._v("，一步一步的构建出一个可交互的"),t("code",[v._v("WEB 页面")]),v._v("。")]),v._v(" "),t("p",[v._v("之后浏览器进程又接受页面的交互事件信息，并将其交给渲染进程，渲染进程内主进程进行命中测试，查找目标元素并执行绑定的事件，完成页面的交互。")])]),t("h2",{attrs:{id:"理解域名中的-cname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#理解域名中的-cname"}},[v._v("#")]),v._v(" 理解域名中的 CNAME")]),v._v(" "),t("hr"),v._v(" "),t("p",[t("strong",[v._v("简介")])]),v._v(" "),t("blockquote",[t("p",[t("code",[v._v("CNAME")]),v._v(" 即指"),t("code",[v._v("别名记录")]),v._v("，也被称为"),t("code",[v._v("规范名字")]),v._v("。这种记录允你将多个名字映射到同一台计算机。")])]),v._v(" "),t("p",[v._v("什么情况下会用到 "),t("code",[v._v("CNAME")]),v._v(" 记录？")]),v._v(" "),t("p",[v._v("如果需要将域名指向另一个域名，再由另一个域名提供 ip 地址，就需要添加 "),t("code",[v._v("CNAME记录")]),v._v("。最常用到 CNAME 的情况包括：做 CDN ，做企业邮局。")]),v._v(" "),t("p",[t("strong",[v._v("CNAME 配置")]),v._v("\n这里已七牛云的配置为示例.如果需要对七牛存储空间的自定义域名（自定义域名建议使用二级域名）进行 CNAME 配置。")]),v._v(" "),t("p",[v._v("获取 CNAME 值\n在 七牛开发者平台 页面选择 CDN ，选择 域名管理，鼠标停留在域名对应 CNAME 值上即可点击复制 ，如下图所示。")]),v._v(" "),t("p",[t("img",{attrs:{src:"/images/base-js82.png",alt:"CNAME"}})]),v._v(" "),t("p",[t("strong",[v._v("添加 CNAME 记录")])]),v._v(" "),t("p",[v._v("添加 CNAME 记录需要在您的域名厂商处配置，比如您在 阿里云 / 腾讯云 / 新网 等处购买的域名，您需要前往购买域名的厂商相应管理控制台，添加域名解析。")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("打开您购买域名的厂商官网，登陆后在页面右上角找到 控制台 或 相关管理后台入口。")])]),v._v(" "),t("li",[t("p",[v._v("在域名厂商的控制台中，找到您的域名解析添加页面，例如：")]),v._v(" "),t("ul",[t("li",[v._v("a. 阿里云：在控制台页面的左侧，产品与服务栏中选择 域名。")]),v._v(" "),t("li",[v._v("b. 腾讯云：在控制台的云产品中，搜索并选择 云解析。")]),v._v(" "),t("li",[v._v("c. DNSPOD：在控制台页面左侧，选择 域名。")])])]),v._v(" "),t("li",[t("p",[v._v("在域名产品的列表中找到您加速域名对应的主域名，点击域名后面的 解析设置 或 解析，进入解析设置页。")])]),v._v(" "),t("li",[t("p",[v._v("选择 添加记录 ，依次填写 主机记录，记录类型 以及 记录值，其他可设为默认值。")])])]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("参数")]),v._v(" "),t("th",[v._v("填写说明")]),v._v(" "),t("th",[v._v("注意事项")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("主机记录")]),v._v(" "),t("td",[v._v("填写加速域名对应的主机前缀")]),v._v(" "),t("td",[v._v("该参数唯一，请勿自定义")])]),v._v(" "),t("tr",[t("td",[v._v("记录类型")]),v._v(" "),t("td",[v._v("选择 CNAME 类型")]),v._v(" "),t("td",[v._v("该参数唯一，请勿自定义")])]),v._v(" "),t("tr",[t("td",[v._v("线路类型")]),v._v(" "),t("td",[v._v("保持默认")]),v._v(" "),t("td",[v._v("该参数可以根据需求自行调整")])]),v._v(" "),t("tr",[t("td",[v._v("记录值")]),v._v(" "),t("td",[v._v("域名创建后，七牛提供的 CNAME")]),v._v(" "),t("td",[v._v("该参数唯一，请勿自定义")])]),v._v(" "),t("tr",[t("td",[v._v("TTL")]),v._v(" "),t("td",[v._v("保持默认")]),v._v(" "),t("td",[v._v("该参数可以根据需求自行调整")])])])]),v._v(" "),t("p",[t("strong",[v._v("如何处理 CNAME 记录和 A 记录冲突？")])]),v._v(" "),t("p",[v._v("同一个域名只能使用 A 记录解析，或者使用 CNAME 解析，如果您在添加域名的 CNAME 解析时提示存在冲突，请检查该主机记录是否已经存在 A 记录。")]),v._v(" "),t("p",[v._v("解决方案：")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("如果您的域名用于绑定七牛云存储")]),v._v(" "),t("ul",[t("li",[v._v("重新添加一个未在其他地方使用的二级加速域名，例如您原本在七牛绑定的是 qiniu.com 或 www.qiniu.com ，建议您重新在空间绑定加速域名例如 cdn.qiniu.com 或者 xxx.qiniu.com ，然后针对新添加的加速域名，配置对应的解析即可。")]),v._v(" "),t("li",[v._v("删除您原有的 A 记录就可做 CNAME 解析 (注：A 记录删除会导致您的域名无法访问该域名的原有资源，谨慎操作)")])])])]),v._v(" "),t("p",[v._v("2 如果您的域名用于加速您的源站服务器站点")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[v._v("* 在确认 CDN 配置无误情况下，可以删除 A 记录。\n* 通过配置 CNAME 解析，使得域名能够绑定到七牛的加速线路上。\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("p",[v._v("修改 CNAME 配置生效时间：新增 CNAME 记录会实时生效，而修改 CNAME 记录需要等待生效时间 TTL。")])]),t("p",[t("strong",[v._v("如何判断 CNAME 是否正确配置？")]),v._v("\n先在 CDN 的 域名管理 中检查域名是否创建成功，如果已经创建成功，且已经按照步骤添加了 CNAME 解析，但是无法正常访问资源外链，或保持“等待 CNAME ”状态，可以通过以下方法检测本地的域名解析，如果域名长时间没有创建成功，您可以提交工单处理。")]),v._v(" "),t("h2",{attrs:{id:"在-https-站点中使用-websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在-https-站点中使用-websocket"}},[v._v("#")]),v._v(" 在 HTTPS 站点中使用 websocket")]),v._v(" "),t("hr"),v._v(" "),t("blockquote",[t("p",[v._v("在 http 中使用 websocket 需要配置对应的端口,在 https 中使用略有不同。")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("如果网站使用 "),t("code",[v._v("HTTPS")]),v._v("，"),t("code",[v._v("WebSocket")]),v._v(" 必须要使用"),t("code",[v._v("wss")]),v._v("协议；")])]),v._v(" "),t("li",[t("p",[v._v("使用 "),t("code",[v._v("wss")]),v._v(" 协议的连接请求必须只能写域名，而非 IP+端口；")])]),v._v(" "),t("li",[t("p",[v._v("建议在 "),t("code",[v._v("URL")]),v._v(" 域名后面为 "),t("code",[v._v("websocket")]),v._v(" 定义一个路径，本例中是"),t("code",[v._v("/wss/")]),v._v("；")])])]),v._v(" "),t("p",[t("strong",[v._v("前端代码")])]),v._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("const")]),v._v(" socket "),t("span",{pre:!0,attrs:{class:"token operator"}},[v._v("=")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("new")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[v._v("WebSocket")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"wss://www.xxx.cn/wss/"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[t("strong",[v._v("Nginx 配置")])]),v._v(" "),t("div",{staticClass:"language-nginx line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# 前提是要配置好HTTPS,然后只需要在HTTPS配置的server内加一个location即可")]),v._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[v._v("# websockets")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("location")]),v._v(" /wss/")]),v._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("{")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("proxy_pass")]),v._v(" http://xxx.xx.xx.xx:9999")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("proxy_http_version")]),v._v(" 1.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("proxy_set_header")]),v._v(" Upgrade "),t("span",{pre:!0,attrs:{class:"token variable"}},[v._v("$http_upgrade")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("proxy_set_header")]),v._v(" Connection "),t("span",{pre:!0,attrs:{class:"token string"}},[v._v('"Upgrade"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("proxy_set_header")]),v._v(" X-Forwarded-For "),t("span",{pre:!0,attrs:{class:"token variable"}},[v._v("$proxy_add_x_forwarded_for")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n    "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("proxy_set_header")]),v._v(" X-Real-IP "),t("span",{pre:!0,attrs:{class:"token variable"}},[v._v("$remote_addr")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("}")]),v._v("\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br"),t("span",{staticClass:"line-number"},[v._v("10")]),t("br"),t("span",{staticClass:"line-number"},[v._v("11")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"},[v._v("TIP")]),t("ol",[t("li",[t("p",[v._v("location /wss/ {...}这里要格外注意！")]),v._v(" "),t("ul",[t("li",[v._v("html 中的 url 是 wss://www.xxx.cn/wss/，所以Nginx配置中一定要是 /wss/")])])]),v._v(" "),t("li",[t("p",[v._v("proxy_pass对应的最好是公网 IP 加端口号，我试过 localhost，127.0.0.1，域名都会失败")])]),v._v(" "),t("li",[t("p",[v._v("proxy_http_version 1.1 版本号必须是 1.1，这条配置必需")])])])])])}),[],!1,null,null,null);_.default=e.exports}}]);