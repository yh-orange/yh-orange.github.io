(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{590:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"electron-学习笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#electron-学习笔记"}},[s._v("#")]),s._v(" electron 学习笔记")]),s._v(" "),a("p",[s._v("node版本 18.20.1")]),s._v(" "),a("h3",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),a("ol",[a("li",[s._v("谨慎地加载模块")])]),s._v(" "),a("p",[a("strong",[s._v("当考虑一个模块时，我们建议你做以下检查：")])]),s._v(" "),a("ul",[a("li",[s._v("包含的依赖项的大小")]),s._v(" "),a("li",[s._v("需要加载的(require()) 资源")]),s._v(" "),a("li",[s._v("你所加载的资源能够执行你关心的操作")])]),s._v(" "),a("p",[s._v("可以使用命令行上的单个命令生成用于加载模块的 CPU 配置文件和堆内存配置文件 在下面的示例中，我们看一下受欢迎的模块 request。\n"),a("code",[s._v("node --cpu-prof --heap-prof -e \"require('request')\"")])]),s._v(" "),a("p",[s._v("执行此命令将在您执行的目录下生成一个 "),a("code",[s._v(".cpuprofile")]),s._v("和一个 "),a("code",[s._v(".heapprofile")]),s._v(" 文件。 这两个文件都可以使用 "),a("code",[s._v("Chrome")]),s._v(" 开发者工具进行分析，分别使用 "),a("code",[s._v("Performance")]),s._v(" 和 "),a("code",[s._v("Memory")]),s._v(" 标签 进行分析。")]),s._v(" "),a("hr"),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("过早的加载和执行代码\n加载模块是令人吃惊的繁重的操作，尤其是在Windows上。 当你的应用开始，不应该让用户等待当时不需要的操作。\n让我们把"),a("code",[s._v("Visual Studio Code")]),s._v("作为一个例子。 当你打开一个文件，它会立刻展示没有高亮任何代码的内容，优先实现和文本交互的功能。 一旦它完成了这项工作，它将继续让代码高亮。\n"),a("strong",[s._v("怎么做？")]),s._v("\n让我们考虑一个示例，并假定您的应用程序正在以架空的.foo形式解析文件 。 为了做到这一点，它依赖同样架空的 "),a("code",[s._v("foo-parserver")]),s._v(" 模块。 在传统的 "),a("code",[s._v("Node.js")]),s._v(" 开发中，你可以写代码热加载依赖：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "fs"很可能已经被加载，所以require()调用是廉价的')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Parser")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFiles")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一旦调用getFiles，立即触发磁盘读取操作，而不是提前进行")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 此外，通过使用异步方法")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 确保我们不会阻塞其他操作")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("readdir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("files\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("async")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParsedFiles")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们假设 foo-parser 是一个庞大且耗费资源的模块")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因此将这个工作推迟到我们真正需要解析文件时再进行")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 由于require()带有模块缓存")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// require()调用只会有一次开销")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后续对getParsedFiles()的调用将会更快")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fooParser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo-parser'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("await")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getFiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" fooParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 现在此操作的开销比我们之前的示例要低得多")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" parser "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Parser")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" parser "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("阻塞主进程\nElectron的主要进程(有时称为“浏览器进程”) 非常特殊：它是与你应用的所有其他进程的父进程，也是和操作系统交互的关键进程。 它负责处理窗口、交互以及应用程序内各个组件之间的通信。 它还包含了UI线程。")])]),s._v(" "),a("p",[s._v("在任何情况下你都不应阻塞此进程或者运行时间长的用户界面线程。 阻塞UI线程意味着您的整个应用程序将冻结直到主进程准备好继续处理。")]),s._v(" "),a("p",[s._v("Electron强大的多进程架构随时准备帮助你完成你的长期任务，但其中也包含少量性能陷阱。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("对于需要长期占用 "),a("code",[s._v("CPU")]),s._v(" 的繁重任务，利用 "),a("code",[s._v("worker threads")]),s._v("，请考虑将它们移动到 "),a("code",[s._v("BrowserWindow")]),s._v(" ，或（作为最后手段）生成一个专用进程。")])]),s._v(" "),a("li",[a("p",[s._v("尽可能避免使用同步 "),a("code",[s._v("IPC")]),s._v(" 和 "),a("code",[s._v("@electron/remote")]),s._v(" 模块。 虽然有合法的使用案例，但很容易不知情地阻塞 UI 线程。")])]),s._v(" "),a("li",[a("p",[s._v("避免在主进程中使用阻塞 "),a("code",[s._v("I/O")]),s._v(" 操作。 简而言之，每当 "),a("code",[s._v("Node.js")]),s._v(" 的核心模块 (如 "),a("code",[s._v("fs")]),s._v(" 或 "),a("code",[s._v("child_process")]),s._v(") 提供一个同步版本或 异步版本，你更应该使用异步和非阻塞式的变量。")])]),s._v(" "),a("li",[a("p",[s._v("阻塞渲染进程\n自从 "),a("code",[s._v("Electron")]),s._v(" 使用了当前版本的 "),a("code",[s._v("Chrome")]),s._v(" ，你可以使用 "),a("code",[s._v("Web")]),s._v(" 平台提供的最新和最优秀的功能来推迟或卸载繁重的操作，以使你的应用保持流畅和迅速的反应。\n一般来说，所有用于构建现代浏览器的性能网络应用程序的建议，对于 "),a("code",[s._v("Electron")]),s._v(" 的渲染器也同样适用。 现在处理你的应用的主要两个方法是对于小的操作使用 "),a("code",[s._v("requestIdleCallback()")]),s._v(" 而长时间运行的操作使用 "),a("code",[s._v("Web Workers")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("不必要的"),a("code",[s._v("polyfills")]),s._v(" "),a("code",[s._v("Electron")]),s._v(" 的一大好处是，你准确地知道哪个引擎将解析你的 "),a("code",[s._v("JavaScript")]),s._v(", "),a("code",[s._v("HTML")]),s._v(" 和 "),a("code",[s._v("CSS")]),s._v(" 。 如果你重新设计的代码是为整个网页编写的，请确保不会 "),a("code",[s._v("polyfill")]),s._v(" 包含在 "),a("code",[s._v("Electron")]),s._v(" 中的特性。")])]),s._v(" "),a("li",[a("p",[s._v("不必要的或者阻塞的网络请求\n避免从互联网中获取几乎不变化的资源，如果它可以轻松地与你的应用程序捆绑起来。")])]),s._v(" "),a("li",[a("p",[s._v("打包你的代码\n有许多JavaScript打包的方法可供使用，我们知道我们最好不要因为推荐某一种工具来使得社区不满。 然而，我们的确建议您使用一个能够处理Electron独特的环境的打包程序，它需要处理Node.js 和浏览器两种环境。")])]),s._v(" "),a("li",[a("p",[s._v("当你不需要默认菜单时调用 "),a("code",[s._v("Menu.setApplicationMenu(null)")])])])]),s._v(" "),a("h3",{attrs:{id:"安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[s._v("#")]),s._v(" 安全")]),s._v(" "),a("p",[a("strong",[s._v("前言")]),s._v("\n作为网络开发人员，我们通常喜欢浏览器的强大安全网，因为这样我们编写的代码风险较小。 我们的网站在沙盒中被赋予了有限的权力，我们相信我们的用户享受到的是一个由大型工程师团队打造的浏览器，它能够快速应对新发现的安全威胁。")]),s._v(" "),a("p",[s._v("当使用 "),a("code",[s._v("Electron")]),s._v(" 时，很重要的一点是要理解 "),a("code",[s._v("Electron")]),s._v(" 不是一个 "),a("code",[s._v("Web")]),s._v(" 浏览器。 它允许您使用熟悉的 Web 技术构建功能丰富的桌面应用程序，但是您的代码具有更强大的功能。 "),a("code",[s._v("JavaScript")]),s._v(" 可以访问文件系统，用户 "),a("code",[s._v("shell")]),s._v(" 等。 这允许您构建更高质量的本机应用程序，但是内在的安全风险会随着授予您的代码的额外权力而增加。")]),s._v(" "),a("p",[s._v("考虑到这一点，请注意，展示任意来自不受信任源的内容都将会带来严重的安全风险，而这种风险 "),a("code",[s._v("Electron")]),s._v(" 也没打算处理。 事实上，最流行的 "),a("code",[s._v("Electron")]),s._v(" 应用程序("),a("code",[s._v("Atom")]),s._v("，"),a("code",[s._v("Slack")]),s._v("，"),a("code",[s._v("Visual Studio Code")]),s._v(" 等) 主要显示本地内容(即使有远程内容也是无 Node 的、受信任的、安全的内容) - 如果您的应用程序要运行在线的源代码，那么您需要确保源代码不是恶意的。")])])}),[],!1,null,null,null);t.default=e.exports}}]);