(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{606:function(s,e,t){"use strict";t.r(e);var a=t(10),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("strong",[s._v("什么是前端单元测试？")])]),s._v(" "),t("ol",[t("li",[s._v("为检测特定的目标是否符合标准而采用专用的工具或者方法进行验证，并最终得出特定的结果。")]),s._v(" "),t("li",[s._v("对于前端开发过程来说，这里的特定目标就是指我们写的代码，通过写的测试用例检查的结果展示测试是否通过或者给出测试报告，这样才能方便问题的排查和后期的修正")]),s._v(" "),t("li",[s._v("对于给定的输入，单元测试检查结果。通过及早发现问题并避免 bug 回归，它可以帮助我们确保代码的各个部分按预期工作。")])]),s._v(" "),t("p",[t("strong",[s._v("为什么需要单元测试？")])]),s._v(" "),t("p",[s._v("前端的单元测试在很多人看来都是一个可有可无的东西，理由一般有下面几条：")]),s._v(" "),t("ul",[t("li",[s._v("写单测比较费时，有这个时间不如多做几个需求")]),s._v(" "),t("li",[s._v("测试在验收的时候对页面的功能都会操作一遍，写单测相当于做无用功")]),s._v(" "),t("li",[s._v("后端提供给前端的接口需要保证质量，因此需要做单测，但前端很少需要提供接口给其他人")])]),s._v(" "),t("p",[s._v("其实，我大体上是同意以上观点的。在大部分的情况下，如果公司的业务不复杂，是完全没必要做单测的。但如果涉及到以下几个方面，就要考虑是否有必要引入单测了：")]),s._v(" "),t("ul",[t("li",[s._v("业务比较复杂，前端参与的人员超过3人")]),s._v(" "),t("li",[s._v("公司非常注重代码质量，想尽一切办法杜绝线上出bug")]),s._v(" "),t("li",[s._v("你是跨项目组件的提供方 你在做一个开源项目")])]),s._v(" "),t("p",[s._v("单测的好处：减少bug，提升代码可读性可维护性，为系统重构做铺垫。")]),s._v(" "),t("p",[t("strong",[s._v("单元测试覆盖率")])]),s._v(" "),t("p",[t("strong",[s._v("含义")]),s._v("：软件测试中的一种度量指标，指在所有功能代码中，完成了单元测试的代码所占的比例。具体分为行级、分支级、方法级等不同级别。它可以从一定程度上衡量我们对代码测试的充分性。原则上我们追求的单元测试覆盖率目标是100%，但业务场景多的情况几乎是不可能。\n平台类项目，核心复杂功能尽量覆盖率做到最高，业务类的酌情处理。")]),s._v(" "),t("p",[t("strong",[s._v("目标覆盖率")]),s._v("：\n行覆盖率（line coverage）：表示是否每一行都执行 80%\n函数覆盖率（function coverage）：表示是否每个函数都调用 100%\n分支覆盖率（branch coverage）：表示是否每个if代码块都执行 80%\n语句覆盖率（statement coverage）：表示是否每个语句都执行 80%")]),s._v(" "),t("h1",{attrs:{id:"前端单测规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端单测规范"}},[s._v("#")]),s._v(" 前端单测规范")]),s._v(" "),t("p",[s._v("在单测工作开展前，需要先约定好单测相应的一系列规范：")]),s._v(" "),t("ol",[t("li",[s._v("测试文件统一在 src/tests 目录中维护 或者 与组件同级目录 如 button.test.tsx 跟button.tsx 文件同级。")]),s._v(" "),t("li",[s._v("测试文件命名与React组件命名保持一致，后面以.test.tsx结尾")]),s._v(" "),t("li",[s._v("测试用例使用"),t("code",[s._v('it("功能描述",()=>{})')]),s._v("函数描述用例单元\n针对最小功能单元的测试用例主要集中在该函数内 尽量一个测试用例只做一件事情（每个测试用例一个it函数代表）。字符串代表测试用例名称：常用命名模式“被测对象在什么情况下是什么行为”")]),s._v(" "),t("li",[s._v("一组功能集合测试使用"),t("code",[s._v('describe("功能集合描述",()=>{})')]),s._v("函数描述功能集合\n一个测试文件只能描述一个功能集合，这个功能集合可以是一个React组件，也可以是一个公共模块，公共函数，公共配置。尽量每次编写测试用例都用"),t("code",[s._v("describe")]),s._v("包裹进行分块。")])]),s._v(" "),t("ul",[t("li",[s._v("UI测试套件统一使用enzyme\n使用enzyme可以借助jquery like的选择器方便的对DOM渲染结果做校验")]),s._v(" "),t("li",[s._v("React组件测试用例必须包含：")]),s._v(" "),t("li",[s._v("Snapshot快照比对")]),s._v(" "),t("li",[s._v("Props是否正确传入")]),s._v(" "),t("li",[s._v("组件分支渲染")]),s._v(" "),t("li",[s._v("事件调用和参数传递")]),s._v(" "),t("li",[s._v("函数调用，state状态值的改变")]),s._v(" "),t("li",[s._v("页面跳转回应")])]),s._v(" "),t("p",[s._v("针对这一点我们可以根据这些维度来对我们的代码进行测试：")]),s._v(" "),t("ul",[t("li",[s._v("某个子组件，标签，CSS class类 在组件中的个数，长度")]),s._v(" "),t("li",[s._v("某个标签下文本内容是否一致")]),s._v(" "),t("li",[s._v("标签类型")]),s._v(" "),t("li",[s._v("组件中函数调用是否符合预期，模拟调用该函数给定参数能否与预期结果一致")]),s._v(" "),t("li",[s._v("针对公共js库模块进行快照测试，确保当次更改是否需要")]),s._v(" "),t("li",[s._v("在执行某些操作后state的状态值是否发生改变，某个标签元素是否渲染")])]),s._v(" "),t("h1",{attrs:{id:"单测框架技术选型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单测框架技术选型"}},[s._v("#")]),s._v(" 单测框架技术选型")]),s._v(" "),t("p",[s._v("目前比较流行的React单测组合是Jest+Enzyme")]),s._v(" "),t("p",[t("strong",[s._v("Jest")]),s._v("\nJest是Facebook开发的一个测试框架，它集成了测试执行器、断言库、spy、mock、snapshot和测试覆盖率报告等功能。React项目本身也是使用Jest进行单测的，因此它们俩的契合度相当高。\n它具有特点:")]),s._v(" "),t("ul",[t("li",[s._v("开箱即用，配置少，API简单，上手成本极低在沙箱中运行，更加安全")]),s._v(" "),t("li",[s._v("支持断言和仿真")]),s._v(" "),t("li",[s._v("自动生成测试覆盖率报告")]),s._v(" "),t("li",[s._v("通过生成 "),t("code",[s._v("Snapshot")]),s._v(" 进行UI 测试单测执行效率")])]),s._v(" "),t("p",[t("strong",[s._v("Enzyme")]),s._v("\nEnzyme是由airbnb开发的React单测工具。它针对类 react 组件提供了很多关于 UI 渲染，元素查找，事件触发等相关的 API 和匹配器，可以帮助我们更加高效的完成单测编写。它扩展了React的TestUtils并通过支持类似jQuery的find语法可以很方便的对render出来的结果做各种断言。")]),s._v(" "),t("ul",[t("li",[s._v("方便操作 "),t("code",[s._v("Dom")]),s._v(" 且操作风格模拟了 "),t("code",[s._v("jQuery")]),s._v(" 的 "),t("code",[s._v("APi")]),s._v("，比较直观，学习使用都比较简单")]),s._v(" "),t("li",[s._v("便利的工具函数库封装，可以处理浅渲染，静态渲染标记以及"),t("code",[s._v("DOM")]),s._v("渲染。")])]),s._v(" "),t("h2",{attrs:{id:"测试工具-jest介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试工具-jest介绍"}},[s._v("#")]),s._v(" 测试工具 jest介绍")]),s._v(" "),t("p",[s._v("主要介绍jest 基础的js 到"),t("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/testing.html#%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95",target:"_blank",rel:"noopener noreferrer"}},[s._v("vue的组件测试"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("a",{attrs:{href:"https://jestjs.io/zh-Hans/docs/getting-started",target:"_blank",rel:"noopener noreferrer"}},[s._v("jest官网"),t("OutboundLink")],1)]),s._v(" "),t("p",[t("strong",[s._v("安装")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("npm install --save-dev jest \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("或者")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("yarn add --dev jest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"基础dome"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础dome"}},[s._v("#")]),s._v(" 基础dome")]),s._v(" "),t("p",[s._v("举个例子，我们先写一个两数相加的函数。 首先，创建 "),t("code",[s._v("sum.js")]),s._v(" 文件︰")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nmodule"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sum"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("然后，创建名为 "),t("code",[s._v("sum.test.js")]),s._v(" 的文件。 此文件中将包含我们的实际测试︰")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./sum'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'adds 1 + 2 to equal 3'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("expect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("toBe")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("随后，将下列配置内容添加到您的 "),t("code",[s._v("package.json")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jest"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("最后，运行 yarn test 或 npm run test ，Jest将打印下面这个消息：")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("PASS  ./sum.test.js\n✓ adds 1 + 2 to equal 3 (5ms)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"匹配器的基本使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#匹配器的基本使用"}},[s._v("#")]),s._v(" 匹配器的基本使用")]),s._v(" "),t("div",{staticClass:"language-test.js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('two plus two is four', () => {\n  expect(2 + 2).toBe(4);\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("在上面的代码中，"),t("code",[s._v("expect (2 + 2)")]),s._v(' 返回了一个"预期"的对象。 你通常不会对这些期望对象调用过多的匹配器。 在此代码中，'),t("code",[s._v(".toBe(4)")]),s._v(" 是匹配器。 当 "),t("code",[s._v("Jest")]),s._v(" 运行时，它会跟踪所有失败的匹配器，以便它可以为你打印出很好的错误消息。")]),s._v(" "),t("p",[t("code",[s._v("toBe")]),s._v("使用 "),t("code",[s._v("Object.is")]),s._v("来进行精准匹配的测试。 如果您想要检查对象的值，请使用 "),t("code",[s._v("toEqual")]),s._v(" 代替：")]),s._v(" "),t("div",{staticClass:"language-test.js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('对象赋值', () => {\n  const data = {one: 1};\n  data['two'] = 2;\n  expect(data).toEqual({one: 1, two: 2});\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("code",[s._v("toEqual")]),s._v(" 递归检查对象或数组的每个字段。")]),s._v(" "),t("p",[s._v("您还可以测试相反的匹配︰")]),s._v(" "),t("div",{staticClass:"language-test.js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('adding positive numbers is not zero', () => {\n  for (let a = 1; a < 10; a++) {\n    for (let b = 1; b < 10; b++) {\n      expect(a + b).not.toBe(0);\n    }\n  }\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("真值")])]),s._v(" "),t("p",[s._v("代码中的 "),t("code",[s._v("undefined")]),s._v(", "),t("code",[s._v("null")]),s._v(", and "),t("code",[s._v("false")]),s._v(" 有不同含义，若你在测试时不想区分他们，可以用真值判断。 Jest提供helpers供你使用。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("toBeNull")]),s._v(" 只匹配 "),t("code",[s._v("null")])]),s._v(" "),t("li",[t("code",[s._v("toBeUndefined")]),s._v(" 只匹配 "),t("code",[s._v("undefined")])]),s._v(" "),t("li",[t("code",[s._v("toBeDefined")]),s._v(" 与 "),t("code",[s._v("toBeUndefined")]),s._v(" 相反")]),s._v(" "),t("li",[t("code",[s._v("toBeTruthy")]),s._v(" 匹配任何 "),t("code",[s._v("if")]),s._v(" 语句为真")]),s._v(" "),t("li",[t("code",[s._v("toBeFalsy")]),s._v(" 匹配任何 "),t("code",[s._v("if")]),s._v(" 语句为假\n例如：")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('null', () => {\n  const n = null;\n  expect(n).toBeNull();\n  expect(n).toBeDefined();\n  expect(n).not.toBeUndefined();\n  expect(n).not.toBeTruthy();\n  expect(n).toBeFalsy();\n});\n\ntest('zero', () => {\n  const z = 0;\n  expect(z).not.toBeNull();\n  expect(z).toBeDefined();\n  expect(z).not.toBeUndefined();\n  expect(z).not.toBeTruthy();\n  expect(z).toBeFalsy();\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[t("strong",[s._v("数字")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('two plus two', () => {\n  const value = 2 + 2;\n  expect(value).toBeGreaterThan(3);\n  expect(value).toBeGreaterThanOrEqual(3.5);\n  expect(value).toBeLessThan(5);\n  expect(value).toBeLessThanOrEqual(4.5);\n\n  // toBe and toEqual are equivalent for numbers\n  expect(value).toBe(4);\n  expect(value).toEqual(4);\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("对于比较浮点数相等，使用 "),t("code",[s._v("toBeCloseTo")]),s._v(" 而不是 "),t("code",[s._v("toEqual")]),s._v("，因为你不希望测试取决于一个小小的舍入误差。")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('两个浮点数字相加', () => {\n  const value = 0.1 + 0.2;\n  //expect(value).toBe(0.3);           这句会报错，因为浮点数有舍入误差\n  expect(value).toBeCloseTo(0.3); // 这句可以运行\n});\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[t("strong",[s._v("字符串")]),s._v("\n您可以检查对具有 "),t("code",[s._v("toMatch")]),s._v(" 正则表达式的字符串︰")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('there is no I in team', () => {\n  expect('team').not.toMatch(/I/);\n});\n\ntest('but there is a \"stop\" in Christoph', () => {\n  expect('Christoph').toMatch(/stop/);\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("数组和可迭代对象")]),s._v("\n你可以通过 "),t("code",[s._v("toContain")]),s._v(" 来检查一个数组或可迭代对象是否包含某个特定项：")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const shoppingList = [\n  'diapers',\n  'kleenex',\n  'trash bags',\n  'paper towels',\n  'milk',\n];\n\ntest('shoppingList数组中包含milk', () => {\n  expect(shoppingList).toContain('milk');\n  expect(new Set(shoppingList)).toContain('milk');\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("这些只是浅尝辄止。 匹配器的完整列表，请查阅 "),t("a",{attrs:{href:"https://jestjs.io/zh-Hans/docs/asynchronous",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考文档"),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"测试异步代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试异步代码"}},[s._v("#")]),s._v(" 测试异步代码")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("JavaScript")]),s._v(" 中执行异步代码是很常见的。 当你有以异步方式运行的代码时，"),t("code",[s._v("Jest")]),s._v(" 需要知道当前它测试的代码是否已完成，然后它可以转移到另一个测试。 "),t("code",[s._v("Jest")]),s._v(" 有若干方法处理这种情况。\n"),t("strong",[s._v("Promise")])]),s._v(" "),t("p",[s._v("为你的测试返回一个 "),t("code",[s._v("Promise")]),s._v("，则"),t("code",[s._v("Jest")]),s._v("会等待"),t("code",[s._v("Promise")]),s._v("的"),t("code",[s._v("resove")]),s._v("状态 "),t("code",[s._v("If the promise is rejected, the test will fail.")])]),s._v(" "),t("p",[t("code",[s._v("For example, let's say that fetchData returns a promise that is supposed to resolve to the string 'peanut butter'.")]),s._v(" 我们可以使用下面的测试代码︰")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('the data is peanut butter', () => {\n  return fetchData().then(data => {\n    expect(data).toBe('peanut butter');\n  });\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("Async/Await")]),s._v("\n或者，您可以在测试中使用 "),t("code",[s._v("async")]),s._v(" 和 "),t("code",[s._v("await")]),s._v("。 写异步测试用例时，可以在传递给test的函数前面加上 "),t("code",[s._v("async")]),s._v("。 例如，可以用来测试相同的 "),t("code",[s._v("fetchData")]),s._v(" 方案︰")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('the data is peanut butter', async () => {\n  const data = await fetchData();\n  expect(data).toBe('peanut butter');\n});\n\ntest('the fetch fails with an error', async () => {\n  expect.assertions(1);\n  try {\n    await fetchData();\n  } catch (e) {\n    expect(e).toMatch('error');\n  }\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("你也可以将 "),t("code",[s._v("async")]),s._v(" and "),t("code",[s._v("await")]),s._v(" 和 "),t("code",[s._v(".resolves")]),s._v(" or "),t("code",[s._v(".rejects")]),s._v("一起使用。")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('the data is peanut butter', async () => {\n  await expect(fetchData()).resolves.toBe('peanut butter');\n});\n\ntest('the fetch fails with an error', async () => {\n  await expect(fetchData()).rejects.toMatch('error');\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("上述示例中，"),t("code",[s._v("async")]),s._v(" and "),t("code",[s._v("await")]),s._v(" 实际上是一种基于"),t("code",[s._v("Promise")]),s._v("的异步语法糖。")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"title"},[s._v("CAUTION")]),t("p",[s._v("Be sure to return (or "),t("code",[s._v("await")]),s._v(") the promise - if you omit the "),t("code",[s._v("return")]),s._v("/"),t("code",[s._v("await")]),s._v(" statement, your test will complete before the promise returned from "),t("code",[s._v("fetchData")]),s._v(" resolves or rejects.")])]),t("p",[s._v("如果期望"),t("code",[s._v("Promise")]),s._v("被"),t("code",[s._v("Reject")]),s._v("，则需要使用 "),t("code",[s._v(".catch")]),s._v(" 方法。 请确保添加 "),t("code",[s._v("expect.assertions")]),s._v(" 来验证一定数量的断言被调用。 否则，一个"),t("code",[s._v("fulfilled")]),s._v("状态的"),t("code",[s._v("Promise")]),s._v("不会让测试用例失败。")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('the fetch fails with an error', () => {\n  expect.assertions(1);\n  return fetchData().catch(e => expect(e).toMatch('error'));\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("strong",[s._v("回调")]),s._v("\nIf you don't use promises, you can use callbacks. For example, let's say that "),t("code",[s._v("fetchData")]),s._v(", instead of returning a promise, expects a callback, i.e. fetches some data and calls "),t("code",[s._v("callback(null, data)")]),s._v(" when it is complete. 你期望返回的数据是一个字符串 "),t("code",[s._v("peanut butter")])]),s._v(" "),t("p",[s._v("默认情况下，一旦到达运行上下文底部Jest测试立即结束。 这样意味着这个测试将不能按预期工作。")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 不要这样做！！！\ntest('the data is peanut butter', () => {\n  function callback(error, data) {\n    if (error) {\n      throw error;\n    }\n    expect(data).toBe('peanut butter');\n  }\n\n  fetchData(callback);\n});\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("问题在于一旦 "),t("code",[s._v("fetchData")]),s._v(" 执行结束，此测试就在调用回调函数前结束了（因为同步代码结束后，才是异步拿到的数据）。")]),s._v(" "),t("p",[s._v("还有另一种形式的 "),t("code",[s._v("test")]),s._v(" 可以解决这个问题。 使用单个参数调用 "),t("code",[s._v("done")]),s._v("，而不是将测试放在一个空参数的函数。 "),t("code",[s._v("Jest")]),s._v(" 会等 "),t("code",[s._v("done")]),s._v(" 回调函数被调用执行结束后，再结束测试。")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('the data is peanut butter', done => {\n     function callback(error, data) {\n       if (error) {\n         done(error);\n         return;\n       }\n       try {\n         expect(data).toBe('peanut butter');\n         done();\n       } catch (error) {\n         done(error);\n       }\n     }\n   \n     fetchData(callback);\n   });\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[s._v("若 "),t("code",[s._v("done()")]),s._v(" 函数从未被调用，测试用例会正如你预期的那样执行失败（显示超时错误）。")]),s._v(" "),t("p",[s._v("若 "),t("code",[s._v("expect")]),s._v(" 执行失败，它会抛出一个错误，后面的 "),t("code",[s._v("done()")]),s._v(" 不再执行。 若我们想知道测试用例为何失败，我们必须将 "),t("code",[s._v("expect")]),s._v(" 放入 "),t("code",[s._v("try")]),s._v(" 中，将 "),t("code",[s._v("error")]),s._v(" 传递给 "),t("code",[s._v("catch")]),s._v(" 中的 "),t("code",[s._v("done函数")]),s._v("。 否则，最后控制台将显示一个超时错误失败，不能显示我们在 "),t("code",[s._v("expect(data)")]),s._v(" 中接收的值。")]),s._v(" "),t("p",[s._v("注意： "),t("code",[s._v("done()")]),s._v(" 不应与Promises混合，因为这会导致您测试中的内存泄漏。")]),s._v(" "),t("h1",{attrs:{id:"vue单元测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue单元测试"}},[s._v("#")]),s._v(" Vue单元测试")]),s._v(" "),t("p",[t("code",[s._v("Vue Test Utils")]),s._v(" 是"),t("code",[s._v("Vue.js")]),s._v(" 官方的单元测试实用工具库。")]),s._v(" "),t("p",[s._v("以 "),t("code",[s._v("Vue3")]),s._v("为例")]),s._v(" "),t("ul",[t("li",[s._v("安装工具")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("vue add @vue/cli-plugin-unit-jest\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("这个命令会帮我们把相关的配置都配好，相关的依赖都装好，还会帮我们生成一个"),t("code",[s._v("jest.config.js")]),s._v("文件。")]),s._v(" "),t("ul",[t("li",[s._v("jest中常用的一些配置项的介绍")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('module.exports = {\n    "moduleFileExtensions": [ //不需要配置\n        "js",\n        "json",\n        // 告诉 Jest 处理 `*.vue` 文件\n        "vue"\n    ],\n    testMatch: [ //test文件所在位置\n        \'**/tests/unit/**/*.spec.(js|jsx|ts|tsx)|**/__tests__/*.(js|jsx|ts|tsx)\'\n    ],\n    "transform": {  //不需要配置\n        // 用 `vue-jest` 处理 `*.vue` 文件\n        ".*\\\\.(vue)$": "&lt;rootDir>/node_modules/vue-jest",\n        // 用 `babel-jest` 处理 js\n        "^.+\\\\.js$": "babel-jest"\n    },\n    "moduleNameMapper": { //不需要配置\n        "^@/(.*)$": "&lt;rootDir>/src/$1"\n    },\n    "collectCoverage": true,  //是否创建报告\n    "collectCoverageFrom": ["**/*.{js,vue}", "!**/node_modules/**"], //创建报告的文件来源\n    "coverageReporters": ["html", "text-summary"]   //报告的格式                \n    "coveragePathIgnorePatterns":["node_modules"]   //生成报告需要忽略的文件，默认值为     \n     "globals":{ //配置全局变量，此处我配置了一个全局变量VUE_APP_DATA，也可以在setup file中配置，如下说的lodash      \n        "VUE_APP_DATA": {siteENV:\'DEV\'}\n   } ,\n   setupFiles: [\'&lt;rootDir>/src/jest-setup.js\'] //启动jest需要的文件\n};\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("ul",[t("li",[s._v("在项目目录中创建tests文件，再创建unit文件，在其中文件命名的话，就以 xxx.spec.js命名（这个执行命令的时候，已经给我们创建了）")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import { shallowMount } from '@vue/test-utils'\nimport explame from '@/components/Explame'\n \ndescribe('Explame .vue', () => {\n  it('renders props.msg when passed', () => {\n    const msg = 'new message'\n    const wrapper = shallowMount(Explame , {\n      propsData: { msg }\n    })\n    expect(wrapper.text()).toMatch(msg)\n  })\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("ul",[t("li",[s._v("在 "),t("code",[s._v("package.json")]),s._v("中添加启动命令，然后通过在控制台执行 "),t("code",[s._v("npm run test:unit")]),s._v(" ，进行测试")])]),s._v(" "),t("p",[t("strong",[s._v("在package.json中 设置 --coverage 即可 测试覆盖率")]),s._v(" "),t("code",[s._v('"test:unit": "vue-cli-service test:unit --coverage"')])]),s._v(" "),t("ul",[t("li",[s._v("%stmts是语句覆盖率（statement coverage）：是不是每个语句都执行了？")]),s._v(" "),t("li",[s._v("%Branch分支覆盖率（branch coverage）：是不是每个if代码块都执行了？")]),s._v(" "),t("li",[s._v("%Funcs函数覆盖率（function coverage）：是不是每个函数都调用了？")]),s._v(" "),t("li",[s._v("%Lines行覆盖率（line coverage）：是不是每一行都执行了？")])]),s._v(" "),t("p",[t("strong",[s._v("常用api")]),s._v("\n--mount: 创建一个包含被挂载和渲染的 Vue 组件的 wrapper,它仅仅挂载当前实例")]),s._v(" "),t("p",[s._v("---shallowMount：和 mount 一样，创建一个包含被挂载和渲染的 Vue 组件的 Wrapper，只挂载一个组件而不渲染其子组件 (即保留它们的存根),这个方法可以保证你关心的组件在渲染时没有同时将其子组件渲染，避免了子组件可能带来的副作用（比如Http请求等）")]),s._v(" "),t("p",[s._v('---shallowMount和mount的区别：在文档中描述为"不同的是被存根的子组件"，大白话就是shallowMount不会加载子组件，不会被子组件的行为属性影响该组件。')]),s._v(" "),t("p",[s._v("为什么使用shallowMount而不使用mount？")]),s._v(" "),t("p",[s._v('---我认为单元测试的重点在"单元"二字，而不是"测试"，想测试子组件再为子组件写对应的测试代码即可')]),s._v(" "),t("p",[s._v("---Wrapper：常见的有一下几种方法")]),s._v(" "),t("ul",[t("li",[s._v("Wrapper：Wrapper 是一个包括了一个挂载组件或 vnode，以及测试该组件或 vnode 的方法。")]),s._v(" "),t("li",[s._v("Wrapper.vm：这是该 Vue 实例。你可以通过 wrapper.vm 访问一个实例所有的方法和属性。")]),s._v(" "),t("li",[s._v("Wrapper.classes: 返回是否拥有该class的dom或者类名数组。")]),s._v(" "),t("li",[s._v("Wrapper.find：返回第一个满足条件的dom。")]),s._v(" "),t("li",[s._v("Wrapper.findAll：返回所有满足条件的dom。")]),s._v(" "),t("li",[s._v("Wrapper.html：返回html字符串。")]),s._v(" "),t("li",[s._v("Wrapper.text：返回内容字符串。")]),s._v(" "),t("li",[s._v("Wrapper.setData：设置该组件的初始data数据。")]),s._v(" "),t("li",[s._v("Wrapper.setProps：设置该组件的初始props数据。  （这是使用了，但没有效果）")]),s._v(" "),t("li",[s._v("Wrapper.trigger：用来触发事件。\n"),t("a",{attrs:{href:"https://v1.test-utils.vuejs.org/zh/api/",target:"_blank",rel:"noopener noreferrer"}},[s._v("更多api"),t("OutboundLink")],1)])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('&lt;template>\n\t&lt;div class="jest">\n\t\t&lt;div class="name">{{name}}&lt;/div>\n\t\t&lt;div class="name">{{name}}{{text}}&lt;/div>\n\t\t&lt;div class="text" @click="add">{{text}}&lt;/div>\n\t&lt;/div>\n&lt;/template>\n&lt;script src="./script.js">\nexport default {\n\tname:"Foo",\n\tprops:{\n\t\tname:{\n\t\t\ttype: String,\n\t\t\tdefault: \'啦啦啦\'\n\t\t}\n\t},\n    data() {\n        return {\n            text: 123\n        }\n    },\n    methods:{\n    \tadd(){\n\t\t\tthis.text += 1\n\t\t}\n    }\n}\n&lt;/script>   \n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);